{"ast":null,"code":"import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { useActiveDescendant } from '@fluentui/react-aria';\nimport { ChevronDownRegular as ChevronDownIcon, DismissRegular as DismissIcon } from '@fluentui/react-icons';\nimport { getPartitionedNativeProps, mergeCallbacks, useMergedRefs, slot, useEventCallback } from '@fluentui/react-utilities';\nimport { useComboboxBaseState } from '../../utils/useComboboxBaseState';\nimport { useComboboxPositioning } from '../../utils/useComboboxPositioning';\nimport { Listbox } from '../Listbox/Listbox';\nimport { useListboxSlot } from '../../utils/useListboxSlot';\nimport { useButtonTriggerSlot } from './useButtonTriggerSlot';\nimport { optionClassNames } from '../Option/useOptionStyles.styles';\n/**\n * Create the state required to render Dropdown.\n *\n * The returned state can be modified with hooks such as useDropdownStyles_unstable,\n * before being passed to renderDropdown_unstable.\n *\n * @param props - props from this instance of Dropdown\n * @param ref - reference to root HTMLElement of Dropdown\n */\nexport const useDropdown_unstable = (props, ref) => {\n  var _state_clearButton;\n  // Merge props from surrounding <Field>, if any\n  props = useFieldControlProps_unstable(props, {\n    supportsLabelFor: true,\n    supportsSize: true\n  });\n  const {\n    listboxRef: activeDescendantListboxRef,\n    activeParentRef,\n    controller: activeDescendantController\n  } = useActiveDescendant({\n    matchOption: el => el.classList.contains(optionClassNames.root)\n  });\n  const baseState = useComboboxBaseState({\n    ...props,\n    activeDescendantController\n  });\n  const {\n    clearable,\n    clearSelection,\n    hasFocus,\n    multiselect,\n    open,\n    selectedOptions\n  } = baseState;\n  const {\n    primary: triggerNativeProps,\n    root: rootNativeProps\n  } = getPartitionedNativeProps({\n    props,\n    primarySlotTagName: 'button',\n    excludedPropNames: ['children']\n  });\n  const [comboboxPopupRef, comboboxTargetRef] = useComboboxPositioning(props);\n  const triggerRef = React.useRef(null);\n  const listbox = useListboxSlot(props.listbox, useMergedRefs(comboboxPopupRef, activeDescendantListboxRef), {\n    state: baseState,\n    triggerRef,\n    defaultProps: {\n      children: props.children\n    }\n  });\n  var _props_button;\n  const trigger = useButtonTriggerSlot((_props_button = props.button) !== null && _props_button !== void 0 ? _props_button : {}, useMergedRefs(triggerRef, activeParentRef, ref), {\n    state: baseState,\n    defaultProps: {\n      type: 'button',\n      tabIndex: 0,\n      children: baseState.value || props.placeholder,\n      'aria-controls': open ? listbox === null || listbox === void 0 ? void 0 : listbox.id : undefined,\n      ...triggerNativeProps\n    },\n    activeDescendantController\n  });\n  const rootSlot = slot.always(props.root, {\n    defaultProps: {\n      'aria-owns': !props.inlinePopup && open ? listbox === null || listbox === void 0 ? void 0 : listbox.id : undefined,\n      children: props.children,\n      ...rootNativeProps\n    },\n    elementType: 'div'\n  });\n  rootSlot.ref = useMergedRefs(rootSlot.ref, comboboxTargetRef);\n  const showClearButton = selectedOptions.length > 0 && clearable && !multiselect;\n  const state = {\n    components: {\n      root: 'div',\n      button: 'button',\n      clearButton: 'button',\n      expandIcon: 'span',\n      listbox: Listbox\n    },\n    root: rootSlot,\n    button: trigger,\n    listbox: open || hasFocus ? listbox : undefined,\n    clearButton: slot.optional(props.clearButton, {\n      defaultProps: {\n        'aria-label': 'Clear selection',\n        children: /*#__PURE__*/React.createElement(DismissIcon, null),\n        // Safari doesn't allow to focus an element with this\n        tabIndex: 0,\n        type: 'button'\n      },\n      elementType: 'button',\n      renderByDefault: true\n    }),\n    expandIcon: slot.optional(props.expandIcon, {\n      renderByDefault: true,\n      defaultProps: {\n        children: /*#__PURE__*/React.createElement(ChevronDownIcon, null)\n      },\n      elementType: 'span'\n    }),\n    placeholderVisible: !baseState.value && !!props.placeholder,\n    showClearButton,\n    activeDescendantController,\n    ...baseState\n  };\n  const onClearButtonClick = useEventCallback(mergeCallbacks((_state_clearButton = state.clearButton) === null || _state_clearButton === void 0 ? void 0 : _state_clearButton.onClick, ev => {\n    var _triggerRef_current;\n    clearSelection(ev);\n    (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();\n  }));\n  if (state.clearButton) {\n    state.clearButton.onClick = onClearButtonClick;\n  }\n  // Heads up! We don't support \"clearable\" in multiselect mode, so we should never display a slot\n  if (multiselect) {\n    state.clearButton = undefined;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- \"process.env\" does not change in runtime\n    React.useEffect(() => {\n      if (clearable && multiselect) {\n        // eslint-disable-next-line no-console\n        console.error(`[@fluentui/react-combobox] \"clearable\" prop is not supported in multiselect mode.`);\n      }\n    }, [clearable, multiselect]);\n  }\n  return state;\n};","map":{"version":3,"names":["React","useFieldControlProps_unstable","useActiveDescendant","ChevronDownRegular","ChevronDownIcon","DismissRegular","DismissIcon","getPartitionedNativeProps","mergeCallbacks","useMergedRefs","slot","useEventCallback","useComboboxBaseState","useComboboxPositioning","Listbox","useListboxSlot","useButtonTriggerSlot","optionClassNames","useDropdown_unstable","props","ref","_state_clearButton","supportsLabelFor","supportsSize","listboxRef","activeDescendantListboxRef","activeParentRef","controller","activeDescendantController","matchOption","el","classList","contains","root","baseState","clearable","clearSelection","hasFocus","multiselect","open","selectedOptions","primary","triggerNativeProps","rootNativeProps","primarySlotTagName","excludedPropNames","comboboxPopupRef","comboboxTargetRef","triggerRef","useRef","listbox","state","defaultProps","children","_props_button","trigger","button","type","tabIndex","value","placeholder","id","undefined","rootSlot","always","inlinePopup","elementType","showClearButton","length","components","clearButton","expandIcon","optional","createElement","renderByDefault","placeholderVisible","onClearButtonClick","onClick","ev","_triggerRef_current","current","focus","process","env","NODE_ENV","useEffect","console","error"],"sources":["D:/shubh/invezza-hrm/node_modules/@fluentui/react-combobox/lib/components/Dropdown/useDropdown.js"],"sourcesContent":["import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { useActiveDescendant } from '@fluentui/react-aria';\nimport { ChevronDownRegular as ChevronDownIcon, DismissRegular as DismissIcon } from '@fluentui/react-icons';\nimport { getPartitionedNativeProps, mergeCallbacks, useMergedRefs, slot, useEventCallback } from '@fluentui/react-utilities';\nimport { useComboboxBaseState } from '../../utils/useComboboxBaseState';\nimport { useComboboxPositioning } from '../../utils/useComboboxPositioning';\nimport { Listbox } from '../Listbox/Listbox';\nimport { useListboxSlot } from '../../utils/useListboxSlot';\nimport { useButtonTriggerSlot } from './useButtonTriggerSlot';\nimport { optionClassNames } from '../Option/useOptionStyles.styles';\n/**\n * Create the state required to render Dropdown.\n *\n * The returned state can be modified with hooks such as useDropdownStyles_unstable,\n * before being passed to renderDropdown_unstable.\n *\n * @param props - props from this instance of Dropdown\n * @param ref - reference to root HTMLElement of Dropdown\n */ export const useDropdown_unstable = (props, ref)=>{\n    var _state_clearButton;\n    // Merge props from surrounding <Field>, if any\n    props = useFieldControlProps_unstable(props, {\n        supportsLabelFor: true,\n        supportsSize: true\n    });\n    const { listboxRef: activeDescendantListboxRef, activeParentRef, controller: activeDescendantController } = useActiveDescendant({\n        matchOption: (el)=>el.classList.contains(optionClassNames.root)\n    });\n    const baseState = useComboboxBaseState({\n        ...props,\n        activeDescendantController\n    });\n    const { clearable, clearSelection, hasFocus, multiselect, open, selectedOptions } = baseState;\n    const { primary: triggerNativeProps, root: rootNativeProps } = getPartitionedNativeProps({\n        props,\n        primarySlotTagName: 'button',\n        excludedPropNames: [\n            'children'\n        ]\n    });\n    const [comboboxPopupRef, comboboxTargetRef] = useComboboxPositioning(props);\n    const triggerRef = React.useRef(null);\n    const listbox = useListboxSlot(props.listbox, useMergedRefs(comboboxPopupRef, activeDescendantListboxRef), {\n        state: baseState,\n        triggerRef,\n        defaultProps: {\n            children: props.children\n        }\n    });\n    var _props_button;\n    const trigger = useButtonTriggerSlot((_props_button = props.button) !== null && _props_button !== void 0 ? _props_button : {}, useMergedRefs(triggerRef, activeParentRef, ref), {\n        state: baseState,\n        defaultProps: {\n            type: 'button',\n            tabIndex: 0,\n            children: baseState.value || props.placeholder,\n            'aria-controls': open ? listbox === null || listbox === void 0 ? void 0 : listbox.id : undefined,\n            ...triggerNativeProps\n        },\n        activeDescendantController\n    });\n    const rootSlot = slot.always(props.root, {\n        defaultProps: {\n            'aria-owns': !props.inlinePopup && open ? listbox === null || listbox === void 0 ? void 0 : listbox.id : undefined,\n            children: props.children,\n            ...rootNativeProps\n        },\n        elementType: 'div'\n    });\n    rootSlot.ref = useMergedRefs(rootSlot.ref, comboboxTargetRef);\n    const showClearButton = selectedOptions.length > 0 && clearable && !multiselect;\n    const state = {\n        components: {\n            root: 'div',\n            button: 'button',\n            clearButton: 'button',\n            expandIcon: 'span',\n            listbox: Listbox\n        },\n        root: rootSlot,\n        button: trigger,\n        listbox: open || hasFocus ? listbox : undefined,\n        clearButton: slot.optional(props.clearButton, {\n            defaultProps: {\n                'aria-label': 'Clear selection',\n                children: /*#__PURE__*/ React.createElement(DismissIcon, null),\n                // Safari doesn't allow to focus an element with this\n                tabIndex: 0,\n                type: 'button'\n            },\n            elementType: 'button',\n            renderByDefault: true\n        }),\n        expandIcon: slot.optional(props.expandIcon, {\n            renderByDefault: true,\n            defaultProps: {\n                children: /*#__PURE__*/ React.createElement(ChevronDownIcon, null)\n            },\n            elementType: 'span'\n        }),\n        placeholderVisible: !baseState.value && !!props.placeholder,\n        showClearButton,\n        activeDescendantController,\n        ...baseState\n    };\n    const onClearButtonClick = useEventCallback(mergeCallbacks((_state_clearButton = state.clearButton) === null || _state_clearButton === void 0 ? void 0 : _state_clearButton.onClick, (ev)=>{\n        var _triggerRef_current;\n        clearSelection(ev);\n        (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();\n    }));\n    if (state.clearButton) {\n        state.clearButton.onClick = onClearButtonClick;\n    }\n    // Heads up! We don't support \"clearable\" in multiselect mode, so we should never display a slot\n    if (multiselect) {\n        state.clearButton = undefined;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks -- \"process.env\" does not change in runtime\n        React.useEffect(()=>{\n            if (clearable && multiselect) {\n                // eslint-disable-next-line no-console\n                console.error(`[@fluentui/react-combobox] \"clearable\" prop is not supported in multiselect mode.`);\n            }\n        }, [\n            clearable,\n            multiselect\n        ]);\n    }\n    return state;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}