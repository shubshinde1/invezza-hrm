{"ast":null,"code":"import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { isHTMLElement } from '@fluentui/react-utilities';\nexport function useOptionWalker(options) {\n  const {\n    matchOption\n  } = options;\n  const {\n    targetDocument\n  } = useFluent();\n  const treeWalkerRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const optionFilter = React.useCallback(node => {\n    if (isHTMLElement(node) && matchOption(node)) {\n      return NodeFilter.FILTER_ACCEPT;\n    }\n    return NodeFilter.FILTER_SKIP;\n  }, [matchOption]);\n  const setListbox = React.useCallback(el => {\n    if (el && targetDocument) {\n      listboxRef.current = el;\n      treeWalkerRef.current = targetDocument.createTreeWalker(el, NodeFilter.SHOW_ELEMENT, optionFilter);\n    } else {\n      listboxRef.current = null;\n    }\n  }, [targetDocument, optionFilter]);\n  const optionWalker = React.useMemo(() => ({\n    first: () => {\n      if (!treeWalkerRef.current || !listboxRef.current) {\n        return null;\n      }\n      treeWalkerRef.current.currentNode = listboxRef.current;\n      return treeWalkerRef.current.firstChild();\n    },\n    last: () => {\n      if (!treeWalkerRef.current || !listboxRef.current) {\n        return null;\n      }\n      return treeWalkerRef.current.lastChild();\n    },\n    next: () => {\n      if (!treeWalkerRef.current) {\n        return null;\n      }\n      return treeWalkerRef.current.nextNode();\n    },\n    prev: () => {\n      if (!treeWalkerRef.current) {\n        return null;\n      }\n      return treeWalkerRef.current.previousNode();\n    },\n    find: (predicate, startFrom) => {\n      if (!treeWalkerRef.current || !listboxRef.current) {\n        return null;\n      }\n      const start = startFrom ? targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.getElementById(startFrom) : null;\n      treeWalkerRef.current.currentNode = start !== null && start !== void 0 ? start : listboxRef.current;\n      let cur = treeWalkerRef.current.currentNode;\n      while (cur && !predicate(cur.id)) {\n        cur = treeWalkerRef.current.nextNode();\n      }\n      return cur;\n    },\n    setCurrent: el => {\n      if (!treeWalkerRef.current) {\n        return;\n      }\n      treeWalkerRef.current.currentNode = el;\n    }\n  }), [targetDocument]);\n  return {\n    optionWalker,\n    listboxCallbackRef: setListbox\n  };\n}","map":{"version":3,"names":["React","useFluent_unstable","useFluent","isHTMLElement","useOptionWalker","options","matchOption","targetDocument","treeWalkerRef","useRef","listboxRef","optionFilter","useCallback","node","NodeFilter","FILTER_ACCEPT","FILTER_SKIP","setListbox","el","current","createTreeWalker","SHOW_ELEMENT","optionWalker","useMemo","first","currentNode","firstChild","last","lastChild","next","nextNode","prev","previousNode","find","predicate","startFrom","start","getElementById","cur","id","setCurrent","listboxCallbackRef"],"sources":["D:/shubh/invezza-hrm/node_modules/@fluentui/react-aria/lib/activedescendant/useOptionWalker.js"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { isHTMLElement } from '@fluentui/react-utilities';\nexport function useOptionWalker(options) {\n    const { matchOption } = options;\n    const { targetDocument } = useFluent();\n    const treeWalkerRef = React.useRef(null);\n    const listboxRef = React.useRef(null);\n    const optionFilter = React.useCallback((node)=>{\n        if (isHTMLElement(node) && matchOption(node)) {\n            return NodeFilter.FILTER_ACCEPT;\n        }\n        return NodeFilter.FILTER_SKIP;\n    }, [\n        matchOption\n    ]);\n    const setListbox = React.useCallback((el)=>{\n        if (el && targetDocument) {\n            listboxRef.current = el;\n            treeWalkerRef.current = targetDocument.createTreeWalker(el, NodeFilter.SHOW_ELEMENT, optionFilter);\n        } else {\n            listboxRef.current = null;\n        }\n    }, [\n        targetDocument,\n        optionFilter\n    ]);\n    const optionWalker = React.useMemo(()=>({\n            first: ()=>{\n                if (!treeWalkerRef.current || !listboxRef.current) {\n                    return null;\n                }\n                treeWalkerRef.current.currentNode = listboxRef.current;\n                return treeWalkerRef.current.firstChild();\n            },\n            last: ()=>{\n                if (!treeWalkerRef.current || !listboxRef.current) {\n                    return null;\n                }\n                return treeWalkerRef.current.lastChild();\n            },\n            next: ()=>{\n                if (!treeWalkerRef.current) {\n                    return null;\n                }\n                return treeWalkerRef.current.nextNode();\n            },\n            prev: ()=>{\n                if (!treeWalkerRef.current) {\n                    return null;\n                }\n                return treeWalkerRef.current.previousNode();\n            },\n            find: (predicate, startFrom)=>{\n                if (!treeWalkerRef.current || !listboxRef.current) {\n                    return null;\n                }\n                const start = startFrom ? targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.getElementById(startFrom) : null;\n                treeWalkerRef.current.currentNode = start !== null && start !== void 0 ? start : listboxRef.current;\n                let cur = treeWalkerRef.current.currentNode;\n                while(cur && !predicate(cur.id)){\n                    cur = treeWalkerRef.current.nextNode();\n                }\n                return cur;\n            },\n            setCurrent: (el)=>{\n                if (!treeWalkerRef.current) {\n                    return;\n                }\n                treeWalkerRef.current.currentNode = el;\n            }\n        }), [\n        targetDocument\n    ]);\n    return {\n        optionWalker,\n        listboxCallbackRef: setListbox\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}