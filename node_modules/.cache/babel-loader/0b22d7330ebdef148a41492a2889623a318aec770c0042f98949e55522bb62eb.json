{"ast":null,"code":"import * as React from 'react';\nimport { getIntrinsicElementProps, useEventCallback, useMergedRefs, slot } from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { useFocusableGroup } from '@fluentui/react-tabster';\nimport { Escape } from '@fluentui/keyboard-keys';\nimport { TOAST_POSITIONS, useToaster } from '../../state';\nimport { ToastContainer } from '../ToastContainer';\nimport { useToasterFocusManagement_unstable } from './useToasterFocusManagement';\nimport { useToastAnnounce } from './useToastAnnounce';\n/**\n * Create the state required to render Toaster.\n *\n * @param props - props from this instance of Toaster\n */\nexport const useToaster_unstable = props => {\n  const {\n    offset,\n    announce: announceProp,\n    mountNode,\n    inline = false,\n    ...rest\n  } = props;\n  const announceRef = React.useRef(() => null);\n  const {\n    toastsToRender,\n    isToastVisible,\n    pauseAllToasts,\n    playAllToasts,\n    tryRestoreFocus,\n    closeAllToasts\n  } = useToaster(rest);\n  const announce = React.useCallback((message, options) => announceRef.current(message, options), []);\n  const {\n    dir\n  } = useFluent();\n  const rootProps = slot.always(getIntrinsicElementProps('div', rest), {\n    elementType: 'div'\n  });\n  const focusableGroupAttr = useFocusableGroup({\n    tabBehavior: 'limited-trap-focus',\n    ignoreDefaultKeydown: {\n      Escape: true\n    }\n  });\n  const onKeyDown = useEventCallback(e => {\n    var _props_onKeyDown;\n    if (e.key === Escape) {\n      e.preventDefault();\n      closeAllToasts();\n    }\n    (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, e);\n  });\n  const usePositionSlot = toastPosition => {\n    var _toastsToRender_get;\n    const focusManagementRef = useToasterFocusManagement_unstable(pauseAllToasts, playAllToasts);\n    const {\n      announceToast,\n      toasterRef\n    } = useToastAnnounce(announceProp !== null && announceProp !== void 0 ? announceProp : announce);\n    return slot.optional(toastsToRender.has(toastPosition) ? rootProps : null, {\n      defaultProps: {\n        ref: useMergedRefs(focusManagementRef, toasterRef),\n        children: (_toastsToRender_get = toastsToRender.get(toastPosition)) === null || _toastsToRender_get === void 0 ? void 0 : _toastsToRender_get.map(toast => /*#__PURE__*/React.createElement(ToastContainer, {\n          ...toast,\n          tryRestoreFocus: tryRestoreFocus,\n          intent: toast.intent,\n          announce: announceToast,\n          key: toast.toastId,\n          visible: isToastVisible(toast.toastId)\n        }, toast.content)),\n        onKeyDown,\n        ...focusableGroupAttr,\n        'data-toaster-position': toastPosition,\n        role: 'list'\n      },\n      elementType: 'div'\n    });\n  };\n  return {\n    dir,\n    mountNode,\n    components: {\n      root: 'div',\n      bottomStart: 'div',\n      bottomEnd: 'div',\n      topStart: 'div',\n      topEnd: 'div',\n      top: 'div',\n      bottom: 'div'\n    },\n    root: slot.always(rootProps, {\n      elementType: 'div'\n    }),\n    bottomStart: usePositionSlot(TOAST_POSITIONS.bottomStart),\n    bottomEnd: usePositionSlot(TOAST_POSITIONS.bottomEnd),\n    topStart: usePositionSlot(TOAST_POSITIONS.topStart),\n    topEnd: usePositionSlot(TOAST_POSITIONS.topEnd),\n    top: usePositionSlot(TOAST_POSITIONS.top),\n    bottom: usePositionSlot(TOAST_POSITIONS.bottom),\n    announceRef,\n    offset,\n    announce: announceProp !== null && announceProp !== void 0 ? announceProp : announce,\n    renderAriaLive: !announceProp,\n    inline\n  };\n};","map":{"version":3,"names":["React","getIntrinsicElementProps","useEventCallback","useMergedRefs","slot","useFluent_unstable","useFluent","useFocusableGroup","Escape","TOAST_POSITIONS","useToaster","ToastContainer","useToasterFocusManagement_unstable","useToastAnnounce","useToaster_unstable","props","offset","announce","announceProp","mountNode","inline","rest","announceRef","useRef","toastsToRender","isToastVisible","pauseAllToasts","playAllToasts","tryRestoreFocus","closeAllToasts","useCallback","message","options","current","dir","rootProps","always","elementType","focusableGroupAttr","tabBehavior","ignoreDefaultKeydown","onKeyDown","e","_props_onKeyDown","key","preventDefault","call","usePositionSlot","toastPosition","_toastsToRender_get","focusManagementRef","announceToast","toasterRef","optional","has","defaultProps","ref","children","get","map","toast","createElement","intent","toastId","visible","content","role","components","root","bottomStart","bottomEnd","topStart","topEnd","top","bottom","renderAriaLive"],"sources":["D:/shubh/invezza-hrm/node_modules/@fluentui/react-toast/lib/components/Toaster/useToaster.js"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, useEventCallback, useMergedRefs, slot } from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { useFocusableGroup } from '@fluentui/react-tabster';\nimport { Escape } from '@fluentui/keyboard-keys';\nimport { TOAST_POSITIONS, useToaster } from '../../state';\nimport { ToastContainer } from '../ToastContainer';\nimport { useToasterFocusManagement_unstable } from './useToasterFocusManagement';\nimport { useToastAnnounce } from './useToastAnnounce';\n/**\n * Create the state required to render Toaster.\n *\n * @param props - props from this instance of Toaster\n */ export const useToaster_unstable = (props)=>{\n    const { offset, announce: announceProp, mountNode, inline = false, ...rest } = props;\n    const announceRef = React.useRef(()=>null);\n    const { toastsToRender, isToastVisible, pauseAllToasts, playAllToasts, tryRestoreFocus, closeAllToasts } = useToaster(rest);\n    const announce = React.useCallback((message, options)=>announceRef.current(message, options), []);\n    const { dir } = useFluent();\n    const rootProps = slot.always(getIntrinsicElementProps('div', rest), {\n        elementType: 'div'\n    });\n    const focusableGroupAttr = useFocusableGroup({\n        tabBehavior: 'limited-trap-focus',\n        ignoreDefaultKeydown: {\n            Escape: true\n        }\n    });\n    const onKeyDown = useEventCallback((e)=>{\n        var _props_onKeyDown;\n        if (e.key === Escape) {\n            e.preventDefault();\n            closeAllToasts();\n        }\n        (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, e);\n    });\n    const usePositionSlot = (toastPosition)=>{\n        var _toastsToRender_get;\n        const focusManagementRef = useToasterFocusManagement_unstable(pauseAllToasts, playAllToasts);\n        const { announceToast, toasterRef } = useToastAnnounce(announceProp !== null && announceProp !== void 0 ? announceProp : announce);\n        return slot.optional(toastsToRender.has(toastPosition) ? rootProps : null, {\n            defaultProps: {\n                ref: useMergedRefs(focusManagementRef, toasterRef),\n                children: (_toastsToRender_get = toastsToRender.get(toastPosition)) === null || _toastsToRender_get === void 0 ? void 0 : _toastsToRender_get.map((toast)=>/*#__PURE__*/ React.createElement(ToastContainer, {\n                        ...toast,\n                        tryRestoreFocus: tryRestoreFocus,\n                        intent: toast.intent,\n                        announce: announceToast,\n                        key: toast.toastId,\n                        visible: isToastVisible(toast.toastId)\n                    }, toast.content)),\n                onKeyDown,\n                ...focusableGroupAttr,\n                'data-toaster-position': toastPosition,\n                role: 'list'\n            },\n            elementType: 'div'\n        });\n    };\n    return {\n        dir,\n        mountNode,\n        components: {\n            root: 'div',\n            bottomStart: 'div',\n            bottomEnd: 'div',\n            topStart: 'div',\n            topEnd: 'div',\n            top: 'div',\n            bottom: 'div'\n        },\n        root: slot.always(rootProps, {\n            elementType: 'div'\n        }),\n        bottomStart: usePositionSlot(TOAST_POSITIONS.bottomStart),\n        bottomEnd: usePositionSlot(TOAST_POSITIONS.bottomEnd),\n        topStart: usePositionSlot(TOAST_POSITIONS.topStart),\n        topEnd: usePositionSlot(TOAST_POSITIONS.topEnd),\n        top: usePositionSlot(TOAST_POSITIONS.top),\n        bottom: usePositionSlot(TOAST_POSITIONS.bottom),\n        announceRef,\n        offset,\n        announce: announceProp !== null && announceProp !== void 0 ? announceProp : announce,\n        renderAriaLive: !announceProp,\n        inline\n    };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,wBAAwB,EAAEC,gBAAgB,EAAEC,aAAa,EAAEC,IAAI,QAAQ,2BAA2B;AAC3G,SAASC,kBAAkB,IAAIC,SAAS,QAAQ,iCAAiC;AACjF,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,MAAM,QAAQ,yBAAyB;AAChD,SAASC,eAAe,EAAEC,UAAU,QAAQ,aAAa;AACzD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,kCAAkC,QAAQ,6BAA6B;AAChF,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAG;EAC5C,MAAM;IAAEC,MAAM;IAAEC,QAAQ,EAAEC,YAAY;IAAEC,SAAS;IAAEC,MAAM,GAAG,KAAK;IAAE,GAAGC;EAAK,CAAC,GAAGN,KAAK;EACpF,MAAMO,WAAW,GAAGtB,KAAK,CAACuB,MAAM,CAAC,MAAI,IAAI,CAAC;EAC1C,MAAM;IAAEC,cAAc;IAAEC,cAAc;IAAEC,cAAc;IAAEC,aAAa;IAAEC,eAAe;IAAEC;EAAe,CAAC,GAAGnB,UAAU,CAACW,IAAI,CAAC;EAC3H,MAAMJ,QAAQ,GAAGjB,KAAK,CAAC8B,WAAW,CAAC,CAACC,OAAO,EAAEC,OAAO,KAAGV,WAAW,CAACW,OAAO,CAACF,OAAO,EAAEC,OAAO,CAAC,EAAE,EAAE,CAAC;EACjG,MAAM;IAAEE;EAAI,CAAC,GAAG5B,SAAS,CAAC,CAAC;EAC3B,MAAM6B,SAAS,GAAG/B,IAAI,CAACgC,MAAM,CAACnC,wBAAwB,CAAC,KAAK,EAAEoB,IAAI,CAAC,EAAE;IACjEgB,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,MAAMC,kBAAkB,GAAG/B,iBAAiB,CAAC;IACzCgC,WAAW,EAAE,oBAAoB;IACjCC,oBAAoB,EAAE;MAClBhC,MAAM,EAAE;IACZ;EACJ,CAAC,CAAC;EACF,MAAMiC,SAAS,GAAGvC,gBAAgB,CAAEwC,CAAC,IAAG;IACpC,IAAIC,gBAAgB;IACpB,IAAID,CAAC,CAACE,GAAG,KAAKpC,MAAM,EAAE;MAClBkC,CAAC,CAACG,cAAc,CAAC,CAAC;MAClBhB,cAAc,CAAC,CAAC;IACpB;IACA,CAACc,gBAAgB,GAAG5B,KAAK,CAAC0B,SAAS,MAAM,IAAI,IAAIE,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACG,IAAI,CAAC/B,KAAK,EAAE2B,CAAC,CAAC;EAC3H,CAAC,CAAC;EACF,MAAMK,eAAe,GAAIC,aAAa,IAAG;IACrC,IAAIC,mBAAmB;IACvB,MAAMC,kBAAkB,GAAGtC,kCAAkC,CAACc,cAAc,EAAEC,aAAa,CAAC;IAC5F,MAAM;MAAEwB,aAAa;MAAEC;IAAW,CAAC,GAAGvC,gBAAgB,CAACK,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAGA,YAAY,GAAGD,QAAQ,CAAC;IAClI,OAAOb,IAAI,CAACiD,QAAQ,CAAC7B,cAAc,CAAC8B,GAAG,CAACN,aAAa,CAAC,GAAGb,SAAS,GAAG,IAAI,EAAE;MACvEoB,YAAY,EAAE;QACVC,GAAG,EAAErD,aAAa,CAAC+C,kBAAkB,EAAEE,UAAU,CAAC;QAClDK,QAAQ,EAAE,CAACR,mBAAmB,GAAGzB,cAAc,CAACkC,GAAG,CAACV,aAAa,CAAC,MAAM,IAAI,IAAIC,mBAAmB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,mBAAmB,CAACU,GAAG,CAAEC,KAAK,IAAG,aAAc5D,KAAK,CAAC6D,aAAa,CAAClD,cAAc,EAAE;UACrM,GAAGiD,KAAK;UACRhC,eAAe,EAAEA,eAAe;UAChCkC,MAAM,EAAEF,KAAK,CAACE,MAAM;UACpB7C,QAAQ,EAAEkC,aAAa;UACvBP,GAAG,EAAEgB,KAAK,CAACG,OAAO;UAClBC,OAAO,EAAEvC,cAAc,CAACmC,KAAK,CAACG,OAAO;QACzC,CAAC,EAAEH,KAAK,CAACK,OAAO,CAAC,CAAC;QACtBxB,SAAS;QACT,GAAGH,kBAAkB;QACrB,uBAAuB,EAAEU,aAAa;QACtCkB,IAAI,EAAE;MACV,CAAC;MACD7B,WAAW,EAAE;IACjB,CAAC,CAAC;EACN,CAAC;EACD,OAAO;IACHH,GAAG;IACHf,SAAS;IACTgD,UAAU,EAAE;MACRC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,KAAK;MAClBC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAE,KAAK;MACfC,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,KAAK;MACVC,MAAM,EAAE;IACZ,CAAC;IACDN,IAAI,EAAEhE,IAAI,CAACgC,MAAM,CAACD,SAAS,EAAE;MACzBE,WAAW,EAAE;IACjB,CAAC,CAAC;IACFgC,WAAW,EAAEtB,eAAe,CAACtC,eAAe,CAAC4D,WAAW,CAAC;IACzDC,SAAS,EAAEvB,eAAe,CAACtC,eAAe,CAAC6D,SAAS,CAAC;IACrDC,QAAQ,EAAExB,eAAe,CAACtC,eAAe,CAAC8D,QAAQ,CAAC;IACnDC,MAAM,EAAEzB,eAAe,CAACtC,eAAe,CAAC+D,MAAM,CAAC;IAC/CC,GAAG,EAAE1B,eAAe,CAACtC,eAAe,CAACgE,GAAG,CAAC;IACzCC,MAAM,EAAE3B,eAAe,CAACtC,eAAe,CAACiE,MAAM,CAAC;IAC/CpD,WAAW;IACXN,MAAM;IACNC,QAAQ,EAAEC,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAGA,YAAY,GAAGD,QAAQ;IACpF0D,cAAc,EAAE,CAACzD,YAAY;IAC7BE;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}