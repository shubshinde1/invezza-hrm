{"ast":null,"code":"import * as React from 'react';\nimport { CheckmarkCircleFilled, DismissCircleFilled, InfoFilled, WarningFilled } from '@fluentui/react-icons';\nimport { getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\nimport { useBackgroundAppearance } from '@fluentui/react-shared-contexts';\nimport { useToastContainerContext } from '../../contexts/toastContainerContext';\n/**\n * Create the state required to render ToastTitle.\n *\n * The returned state can be modified with hooks such as useToastTitleStyles_unstable,\n * before being passed to renderToastTitle_unstable.\n *\n * @param props - props from this instance of ToastTitle\n * @param ref - reference to root HTMLElement of ToastTitle\n */\nexport const useToastTitle_unstable = (props, ref) => {\n  const {\n    intent,\n    titleId\n  } = useToastContainerContext();\n  const backgroundAppearance = useBackgroundAppearance();\n  /** Determine the role and media to render based on the intent */\n  let defaultIcon;\n  switch (intent) {\n    case 'success':\n      defaultIcon = /*#__PURE__*/React.createElement(CheckmarkCircleFilled, null);\n      break;\n    case 'error':\n      defaultIcon = /*#__PURE__*/React.createElement(DismissCircleFilled, null);\n      break;\n    case 'warning':\n      defaultIcon = /*#__PURE__*/React.createElement(WarningFilled, null);\n      break;\n    case 'info':\n      defaultIcon = /*#__PURE__*/React.createElement(InfoFilled, null);\n      break;\n  }\n  return {\n    action: slot.optional(props.action, {\n      elementType: 'div'\n    }),\n    components: {\n      root: 'div',\n      media: 'div',\n      action: 'div'\n    },\n    media: slot.optional(props.media, {\n      renderByDefault: !!intent,\n      defaultProps: {\n        children: defaultIcon\n      },\n      elementType: 'div'\n    }),\n    root: slot.always(getIntrinsicElementProps('div', {\n      // FIXME:\n      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n      // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n      ref: ref,\n      children: props.children,\n      id: titleId,\n      ...props\n    }), {\n      elementType: 'div'\n    }),\n    intent,\n    backgroundAppearance\n  };\n};","map":{"version":3,"names":["React","CheckmarkCircleFilled","DismissCircleFilled","InfoFilled","WarningFilled","getIntrinsicElementProps","slot","useBackgroundAppearance","useToastContainerContext","useToastTitle_unstable","props","ref","intent","titleId","backgroundAppearance","defaultIcon","createElement","action","optional","elementType","components","root","media","renderByDefault","defaultProps","children","always","id"],"sources":["D:/shubh/invezza-hrm/node_modules/@fluentui/react-toast/lib/components/ToastTitle/useToastTitle.js"],"sourcesContent":["import * as React from 'react';\nimport { CheckmarkCircleFilled, DismissCircleFilled, InfoFilled, WarningFilled } from '@fluentui/react-icons';\nimport { getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\nimport { useBackgroundAppearance } from '@fluentui/react-shared-contexts';\nimport { useToastContainerContext } from '../../contexts/toastContainerContext';\n/**\n * Create the state required to render ToastTitle.\n *\n * The returned state can be modified with hooks such as useToastTitleStyles_unstable,\n * before being passed to renderToastTitle_unstable.\n *\n * @param props - props from this instance of ToastTitle\n * @param ref - reference to root HTMLElement of ToastTitle\n */ export const useToastTitle_unstable = (props, ref)=>{\n    const { intent, titleId } = useToastContainerContext();\n    const backgroundAppearance = useBackgroundAppearance();\n    /** Determine the role and media to render based on the intent */ let defaultIcon;\n    switch(intent){\n        case 'success':\n            defaultIcon = /*#__PURE__*/ React.createElement(CheckmarkCircleFilled, null);\n            break;\n        case 'error':\n            defaultIcon = /*#__PURE__*/ React.createElement(DismissCircleFilled, null);\n            break;\n        case 'warning':\n            defaultIcon = /*#__PURE__*/ React.createElement(WarningFilled, null);\n            break;\n        case 'info':\n            defaultIcon = /*#__PURE__*/ React.createElement(InfoFilled, null);\n            break;\n    }\n    return {\n        action: slot.optional(props.action, {\n            elementType: 'div'\n        }),\n        components: {\n            root: 'div',\n            media: 'div',\n            action: 'div'\n        },\n        media: slot.optional(props.media, {\n            renderByDefault: !!intent,\n            defaultProps: {\n                children: defaultIcon\n            },\n            elementType: 'div'\n        }),\n        root: slot.always(getIntrinsicElementProps('div', {\n            // FIXME:\n            // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n            // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n            ref: ref,\n            children: props.children,\n            id: titleId,\n            ...props\n        }), {\n            elementType: 'div'\n        }),\n        intent,\n        backgroundAppearance\n    };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,qBAAqB,EAAEC,mBAAmB,EAAEC,UAAU,EAAEC,aAAa,QAAQ,uBAAuB;AAC7G,SAASC,wBAAwB,EAAEC,IAAI,QAAQ,2BAA2B;AAC1E,SAASC,uBAAuB,QAAQ,iCAAiC;AACzE,SAASC,wBAAwB,QAAQ,sCAAsC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,sBAAsB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EACpD,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGL,wBAAwB,CAAC,CAAC;EACtD,MAAMM,oBAAoB,GAAGP,uBAAuB,CAAC,CAAC;EACtD;EAAkE,IAAIQ,WAAW;EACjF,QAAOH,MAAM;IACT,KAAK,SAAS;MACVG,WAAW,GAAG,aAAcf,KAAK,CAACgB,aAAa,CAACf,qBAAqB,EAAE,IAAI,CAAC;MAC5E;IACJ,KAAK,OAAO;MACRc,WAAW,GAAG,aAAcf,KAAK,CAACgB,aAAa,CAACd,mBAAmB,EAAE,IAAI,CAAC;MAC1E;IACJ,KAAK,SAAS;MACVa,WAAW,GAAG,aAAcf,KAAK,CAACgB,aAAa,CAACZ,aAAa,EAAE,IAAI,CAAC;MACpE;IACJ,KAAK,MAAM;MACPW,WAAW,GAAG,aAAcf,KAAK,CAACgB,aAAa,CAACb,UAAU,EAAE,IAAI,CAAC;MACjE;EACR;EACA,OAAO;IACHc,MAAM,EAAEX,IAAI,CAACY,QAAQ,CAACR,KAAK,CAACO,MAAM,EAAE;MAChCE,WAAW,EAAE;IACjB,CAAC,CAAC;IACFC,UAAU,EAAE;MACRC,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE,KAAK;MACZL,MAAM,EAAE;IACZ,CAAC;IACDK,KAAK,EAAEhB,IAAI,CAACY,QAAQ,CAACR,KAAK,CAACY,KAAK,EAAE;MAC9BC,eAAe,EAAE,CAAC,CAACX,MAAM;MACzBY,YAAY,EAAE;QACVC,QAAQ,EAAEV;MACd,CAAC;MACDI,WAAW,EAAE;IACjB,CAAC,CAAC;IACFE,IAAI,EAAEf,IAAI,CAACoB,MAAM,CAACrB,wBAAwB,CAAC,KAAK,EAAE;MAC9C;MACA;MACA;MACAM,GAAG,EAAEA,GAAG;MACRc,QAAQ,EAAEf,KAAK,CAACe,QAAQ;MACxBE,EAAE,EAAEd,OAAO;MACX,GAAGH;IACP,CAAC,CAAC,EAAE;MACAS,WAAW,EAAE;IACjB,CAAC,CAAC;IACFP,MAAM;IACNE;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}