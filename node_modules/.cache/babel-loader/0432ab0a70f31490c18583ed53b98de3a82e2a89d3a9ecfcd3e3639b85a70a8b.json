{"ast":null,"code":"import * as React from 'react';\nimport { getMetadataFromSlotComponent } from '../utils/getMetadataFromSlotComponent';\nimport { Runtime } from '../utils/Runtime';\nexport const jsxsSlot = (type, overrideProps, key) => {\n  const {\n    elementType,\n    renderFunction,\n    props: slotProps\n  } = getMetadataFromSlotComponent(type);\n  const props = {\n    ...slotProps,\n    ...overrideProps\n  };\n  if (renderFunction) {\n    /**\n    * In static runtime then children is an array and this array won't be keyed.\n    * We should wrap children by a static fragment\n    * as there's no way to know if renderFunction will render statically or dynamically\n    */\n    return Runtime.jsx(React.Fragment, {\n      children: renderFunction(elementType, {\n        ...props,\n        children: Runtime.jsxs(React.Fragment, {\n          children: props.children\n        }, undefined)\n      })\n    }, key);\n  }\n  return Runtime.jsxs(elementType, props, key);\n};","map":{"version":3,"names":["React","getMetadataFromSlotComponent","Runtime","jsxsSlot","type","overrideProps","key","elementType","renderFunction","props","slotProps","jsx","Fragment","children","jsxs","undefined"],"sources":["D:/shubh/invezza-hrm/node_modules/@fluentui/react-jsx-runtime/lib/jsx/jsxsSlot.js"],"sourcesContent":["import * as React from 'react';\nimport { getMetadataFromSlotComponent } from '../utils/getMetadataFromSlotComponent';\nimport { Runtime } from '../utils/Runtime';\nexport const jsxsSlot = (type, overrideProps, key)=>{\n    const { elementType, renderFunction, props: slotProps } = getMetadataFromSlotComponent(type);\n    const props = {\n        ...slotProps,\n        ...overrideProps\n    };\n    if (renderFunction) {\n        /**\n     * In static runtime then children is an array and this array won't be keyed.\n     * We should wrap children by a static fragment\n     * as there's no way to know if renderFunction will render statically or dynamically\n     */ return Runtime.jsx(React.Fragment, {\n            children: renderFunction(elementType, {\n                ...props,\n                children: Runtime.jsxs(React.Fragment, {\n                    children: props.children\n                }, undefined)\n            })\n        }, key);\n    }\n    return Runtime.jsxs(elementType, props, key);\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,4BAA4B,QAAQ,uCAAuC;AACpF,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAO,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEC,aAAa,EAAEC,GAAG,KAAG;EAChD,MAAM;IAAEC,WAAW;IAAEC,cAAc;IAAEC,KAAK,EAAEC;EAAU,CAAC,GAAGT,4BAA4B,CAACG,IAAI,CAAC;EAC5F,MAAMK,KAAK,GAAG;IACV,GAAGC,SAAS;IACZ,GAAGL;EACP,CAAC;EACD,IAAIG,cAAc,EAAE;IAChB;AACR;AACA;AACA;AACA;IAAQ,OAAON,OAAO,CAACS,GAAG,CAACX,KAAK,CAACY,QAAQ,EAAE;MAC/BC,QAAQ,EAAEL,cAAc,CAACD,WAAW,EAAE;QAClC,GAAGE,KAAK;QACRI,QAAQ,EAAEX,OAAO,CAACY,IAAI,CAACd,KAAK,CAACY,QAAQ,EAAE;UACnCC,QAAQ,EAAEJ,KAAK,CAACI;QACpB,CAAC,EAAEE,SAAS;MAChB,CAAC;IACL,CAAC,EAAET,GAAG,CAAC;EACX;EACA,OAAOJ,OAAO,CAACY,IAAI,CAACP,WAAW,EAAEE,KAAK,EAAEH,GAAG,CAAC;AAChD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}