{"ast":null,"code":"'use client';\n\nimport React, { useId } from 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useComboboxContext } from '../Combobox.context.mjs';\nimport classes from '../Combobox.module.css.mjs';\nconst defaultProps = {};\nconst ComboboxOption = factory((_props, ref) => {\n  const props = useProps(\"ComboboxOption\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    onClick,\n    id,\n    active,\n    onMouseDown,\n    onMouseOver,\n    disabled,\n    selected,\n    mod,\n    ...others\n  } = props;\n  const ctx = useComboboxContext();\n  const uuid = useId();\n  const _id = id || uuid;\n  return /* @__PURE__ */React.createElement(Box, {\n    ...ctx.getStyles(\"option\", {\n      className,\n      classNames,\n      styles,\n      style\n    }),\n    ...others,\n    ref,\n    id: _id,\n    mod: [\"combobox-option\", {\n      \"combobox-active\": active,\n      \"combobox-disabled\": disabled,\n      \"combobox-selected\": selected\n    }, mod],\n    role: \"option\",\n    onClick: event => {\n      if (!disabled) {\n        var _ctx$onOptionSubmit;\n        (_ctx$onOptionSubmit = ctx.onOptionSubmit) === null || _ctx$onOptionSubmit === void 0 || _ctx$onOptionSubmit.call(ctx, props.value, props);\n        onClick === null || onClick === void 0 || onClick(event);\n      } else {\n        event.preventDefault();\n      }\n    },\n    onMouseDown: event => {\n      event.preventDefault();\n      onMouseDown === null || onMouseDown === void 0 || onMouseDown(event);\n    },\n    onMouseOver: event => {\n      if (ctx.resetSelectionOnOptionHover) {\n        ctx.store.resetSelectedOption();\n      }\n      onMouseOver === null || onMouseOver === void 0 || onMouseOver(event);\n    }\n  });\n});\nComboboxOption.classes = classes;\nComboboxOption.displayName = \"@mantine/core/ComboboxOption\";\nexport { ComboboxOption };","map":{"version":3,"names":["defaultProps","ComboboxOption","factory","_props","ref","props","useProps","classNames","className","style","styles","vars","onClick","id","active","onMouseDown","onMouseOver","disabled","selected","mod","others","ctx","useComboboxContext","uuid","useId","_id","React","createElement","Box","getStyles","role","event","_ctx$onOptionSubmit","onOptionSubmit","call","value","preventDefault","resetSelectionOnOptionHover","store","resetSelectedOption","classes","displayName"],"sources":["D:\\shubh\\invezza-hrm\\node_modules\\@mantine\\core\\src\\components\\Combobox\\ComboboxOption\\ComboboxOption.tsx"],"sourcesContent":["import React, { useId } from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxOptionStylesNames = 'option';\n\nexport interface ComboboxOptionProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxOptionFactory>,\n    ElementProps<'div'> {\n  /** Option value */\n  value: string;\n\n  /** Determines whether the option is selected */\n  active?: boolean;\n\n  /** Determines whether the option can be selected */\n  disabled?: boolean;\n\n  /** Determines whether item is selected, useful for virtualized comboboxes */\n  selected?: boolean;\n}\n\nexport type ComboboxOptionFactory = Factory<{\n  props: ComboboxOptionProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxOptionStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxOptionProps> = {};\n\nexport const ComboboxOption = factory<ComboboxOptionFactory>((_props, ref) => {\n  const props = useProps('ComboboxOption', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    onClick,\n    id,\n    active,\n    onMouseDown,\n    onMouseOver,\n    disabled,\n    selected,\n    mod,\n    ...others\n  } = props;\n\n  const ctx = useComboboxContext();\n  const uuid = useId();\n  const _id = id || uuid;\n\n  return (\n    <Box\n      {...ctx.getStyles('option', { className, classNames, styles, style })}\n      {...others}\n      ref={ref}\n      id={_id}\n      mod={[\n        'combobox-option',\n        { 'combobox-active': active, 'combobox-disabled': disabled, 'combobox-selected': selected },\n        mod,\n      ]}\n      role=\"option\"\n      onClick={(event) => {\n        if (!disabled) {\n          ctx.onOptionSubmit?.(props.value, props);\n          onClick?.(event);\n        } else {\n          event.preventDefault();\n        }\n      }}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        onMouseDown?.(event);\n      }}\n      onMouseOver={(event) => {\n        if (ctx.resetSelectionOnOptionHover) {\n          ctx.store.resetSelectedOption();\n        }\n        onMouseOver?.(event);\n      }}\n    />\n  );\n});\n\nComboboxOption.classes = classes;\nComboboxOption.displayName = '@mantine/core/ComboboxOption';\n"],"mappings":";;;;;;;;;;;;;;;AASA,MAAMA,YAAY,GAAG,EAAE;AACX,MAACC,cAAc,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EACrD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,gBAAgB,EAAEN,YAAY,EAAEG,MAAM,CAAC;EAC9D,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,IAAI;IACJC,OAAO;IACPC,EAAE;IACFC,MAAM;IACNC,WAAW;IACXC,WAAW;IACXC,QAAQ;IACRC,QAAQ;IACRC,GAAG;IACH,GAAGC;EACJ,IAAGf,KAAK;EACT,MAAMgB,GAAG,GAAGC,kBAAkB,EAAE;EAChC,MAAMC,IAAI,GAAGC,KAAK,EAAE;EACpB,MAAMC,GAAG,GAAGZ,EAAE,IAAIU,IAAI;EACtB,sBAAuBG,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACE,GAAGP,GAAG,CAACQ,SAAS,CAAC,QAAQ,EAAE;MAAErB,SAAS;MAAED,UAAU;MAAEG,MAAM;MAAED;IAAK,CAAE,CAAC;IACpE,GAAGW,MAAM;IACThB,GAAG;IACHS,EAAE,EAAEY,GAAG;IACPN,GAAG,EAAE,CACH,iBAAiB,EACjB;MAAE,iBAAiB,EAAEL,MAAM;MAAE,mBAAmB,EAAEG,QAAQ;MAAE,mBAAmB,EAAEC;IAAU,GAC3FC,GAAG,CACJ;IACDW,IAAI,EAAE,QAAQ;IACdlB,OAAO,EAAGmB,KAAK,IAAK;MAClB,IAAI,CAACd,QAAQ,EAAE;QAAA,IAAAe,mBAAA;QACb,CAAAA,mBAAA,GAAAX,GAAG,CAACY,cAAc,cAAAD,mBAAA,eAAlBA,mBAAA,CAAAE,IAAA,CAAAb,GAAG,EAAkBhB,KAAK,CAAC8B,KAAK,EAAE9B,KAAK,CAAC;QACxCO,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAGmB,KAAK,CAAC;MAC1B,CAAS,MAAM;QACLA,KAAK,CAACK,cAAc,EAAE;MACvB;IACF;IACDrB,WAAW,EAAGgB,KAAK,IAAK;MACtBA,KAAK,CAACK,cAAc,EAAE;MACtBrB,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAGgB,KAAK,CAAC;IACrB;IACDf,WAAW,EAAGe,KAAK,IAAK;MACtB,IAAIV,GAAG,CAACgB,2BAA2B,EAAE;QACnChB,GAAG,CAACiB,KAAK,CAACC,mBAAmB,EAAE;MAChC;MACDvB,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAGe,KAAK,CAAC;IACrB;EACF,CACL,CAAG;AACH,CAAC,CAAE;AACH9B,cAAc,CAACuC,OAAO,GAAGA,OAAO;AAChCvC,cAAc,CAACwC,WAAW,GAAG,8BAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}