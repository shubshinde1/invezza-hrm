{"ast":null,"code":"import * as React from 'react';\nimport { getMetadataFromSlotComponent } from '../utils/getMetadataFromSlotComponent';\nimport { Runtime } from '../utils/Runtime';\nexport const jsxSlot = (type, overrideProps, key) => {\n  const {\n    elementType,\n    renderFunction,\n    props: slotProps\n  } = getMetadataFromSlotComponent(type);\n  const props = {\n    ...slotProps,\n    ...overrideProps\n  };\n  if (renderFunction) {\n    return Runtime.jsx(React.Fragment, {\n      children: renderFunction(elementType, props)\n    }, key);\n  }\n  return Runtime.jsx(elementType, props, key);\n};","map":{"version":3,"names":["React","getMetadataFromSlotComponent","Runtime","jsxSlot","type","overrideProps","key","elementType","renderFunction","props","slotProps","jsx","Fragment","children"],"sources":["D:/shubh/invezza-hrm/node_modules/@fluentui/react-jsx-runtime/lib/jsx/jsxSlot.js"],"sourcesContent":["import * as React from 'react';\nimport { getMetadataFromSlotComponent } from '../utils/getMetadataFromSlotComponent';\nimport { Runtime } from '../utils/Runtime';\nexport const jsxSlot = (type, overrideProps, key)=>{\n    const { elementType, renderFunction, props: slotProps } = getMetadataFromSlotComponent(type);\n    const props = {\n        ...slotProps,\n        ...overrideProps\n    };\n    if (renderFunction) {\n        return Runtime.jsx(React.Fragment, {\n            children: renderFunction(elementType, props)\n        }, key);\n    }\n    return Runtime.jsx(elementType, props, key);\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,4BAA4B,QAAQ,uCAAuC;AACpF,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAO,MAAMC,OAAO,GAAGA,CAACC,IAAI,EAAEC,aAAa,EAAEC,GAAG,KAAG;EAC/C,MAAM;IAAEC,WAAW;IAAEC,cAAc;IAAEC,KAAK,EAAEC;EAAU,CAAC,GAAGT,4BAA4B,CAACG,IAAI,CAAC;EAC5F,MAAMK,KAAK,GAAG;IACV,GAAGC,SAAS;IACZ,GAAGL;EACP,CAAC;EACD,IAAIG,cAAc,EAAE;IAChB,OAAON,OAAO,CAACS,GAAG,CAACX,KAAK,CAACY,QAAQ,EAAE;MAC/BC,QAAQ,EAAEL,cAAc,CAACD,WAAW,EAAEE,KAAK;IAC/C,CAAC,EAAEH,GAAG,CAAC;EACX;EACA,OAAOJ,OAAO,CAACS,GAAG,CAACJ,WAAW,EAAEE,KAAK,EAAEH,GAAG,CAAC;AAC/C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}