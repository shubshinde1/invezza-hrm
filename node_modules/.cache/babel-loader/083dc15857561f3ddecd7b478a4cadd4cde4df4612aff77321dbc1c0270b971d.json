{"ast":null,"code":"import * as React from 'react';\nimport { getIntrinsicElementProps, useId, useTimeout, slot } from '@fluentui/react-utilities';\nimport { Label } from '@fluentui/react-label';\nimport { DefaultSvg } from './DefaultSvg';\nimport { useSpinnerContext } from '../../contexts/SpinnerContext';\n/**\n * Create the state required to render Spinner.\n *\n * The returned state can be modified with hooks such as useSpinnerStyles_unstable,\n * before being passed to renderSpinner_unstable.\n *\n * @param props - props from this instance of Spinner\n * @param ref - reference to root HTMLElement of Spinner\n */\nexport const useSpinner_unstable = (props, ref) => {\n  // Props\n  const {\n    size: contextSize\n  } = useSpinnerContext();\n  const {\n    appearance = 'primary',\n    labelPosition = 'after',\n    size = contextSize !== null && contextSize !== void 0 ? contextSize : 'medium',\n    delay = 0\n  } = props;\n  const baseId = useId('spinner');\n  const {\n    role = 'progressbar',\n    tabIndex,\n    ...rest\n  } = props;\n  const nativeRoot = slot.always(getIntrinsicElementProps('div', {\n    // FIXME:\n    // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n    // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n    ref: ref,\n    role,\n    ...rest\n  }, ['size']), {\n    elementType: 'div'\n  });\n  const [isShownAfterDelay, setIsShownAfterDelay] = React.useState(false);\n  const [setDelayTimeout, clearDelayTimeout] = useTimeout();\n  React.useEffect(() => {\n    if (delay <= 0) {\n      return;\n    }\n    setDelayTimeout(() => {\n      setIsShownAfterDelay(true);\n    }, delay);\n    return () => {\n      clearDelayTimeout();\n    };\n  }, [setDelayTimeout, clearDelayTimeout, delay]);\n  const labelShorthand = slot.optional(props.label, {\n    defaultProps: {\n      id: baseId\n    },\n    renderByDefault: false,\n    elementType: Label\n  });\n  const spinnerShortHand = slot.optional(props.spinner, {\n    renderByDefault: true,\n    defaultProps: {\n      children: /*#__PURE__*/React.createElement(DefaultSvg, null),\n      tabIndex\n    },\n    elementType: 'span'\n  });\n  if (labelShorthand && nativeRoot && !nativeRoot['aria-labelledby']) {\n    nativeRoot['aria-labelledby'] = labelShorthand.id;\n  }\n  const state = {\n    appearance,\n    delay,\n    labelPosition,\n    size,\n    shouldRenderSpinner: !delay || isShownAfterDelay,\n    components: {\n      root: 'div',\n      spinner: 'span',\n      label: Label\n    },\n    root: nativeRoot,\n    spinner: spinnerShortHand,\n    label: labelShorthand\n  };\n  return state;\n};","map":{"version":3,"names":["React","getIntrinsicElementProps","useId","useTimeout","slot","Label","DefaultSvg","useSpinnerContext","useSpinner_unstable","props","ref","size","contextSize","appearance","labelPosition","delay","baseId","role","tabIndex","rest","nativeRoot","always","elementType","isShownAfterDelay","setIsShownAfterDelay","useState","setDelayTimeout","clearDelayTimeout","useEffect","labelShorthand","optional","label","defaultProps","id","renderByDefault","spinnerShortHand","spinner","children","createElement","state","shouldRenderSpinner","components","root"],"sources":["D:/shubh/invezza-hrm/node_modules/@fluentui/react-spinner/lib/components/Spinner/useSpinner.js"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, useId, useTimeout, slot } from '@fluentui/react-utilities';\nimport { Label } from '@fluentui/react-label';\nimport { DefaultSvg } from './DefaultSvg';\nimport { useSpinnerContext } from '../../contexts/SpinnerContext';\n/**\n * Create the state required to render Spinner.\n *\n * The returned state can be modified with hooks such as useSpinnerStyles_unstable,\n * before being passed to renderSpinner_unstable.\n *\n * @param props - props from this instance of Spinner\n * @param ref - reference to root HTMLElement of Spinner\n */ export const useSpinner_unstable = (props, ref)=>{\n    // Props\n    const { size: contextSize } = useSpinnerContext();\n    const { appearance = 'primary', labelPosition = 'after', size = contextSize !== null && contextSize !== void 0 ? contextSize : 'medium', delay = 0 } = props;\n    const baseId = useId('spinner');\n    const { role = 'progressbar', tabIndex, ...rest } = props;\n    const nativeRoot = slot.always(getIntrinsicElementProps('div', {\n        // FIXME:\n        // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n        // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n        ref: ref,\n        role,\n        ...rest\n    }, [\n        'size'\n    ]), {\n        elementType: 'div'\n    });\n    const [isShownAfterDelay, setIsShownAfterDelay] = React.useState(false);\n    const [setDelayTimeout, clearDelayTimeout] = useTimeout();\n    React.useEffect(()=>{\n        if (delay <= 0) {\n            return;\n        }\n        setDelayTimeout(()=>{\n            setIsShownAfterDelay(true);\n        }, delay);\n        return ()=>{\n            clearDelayTimeout();\n        };\n    }, [\n        setDelayTimeout,\n        clearDelayTimeout,\n        delay\n    ]);\n    const labelShorthand = slot.optional(props.label, {\n        defaultProps: {\n            id: baseId\n        },\n        renderByDefault: false,\n        elementType: Label\n    });\n    const spinnerShortHand = slot.optional(props.spinner, {\n        renderByDefault: true,\n        defaultProps: {\n            children: /*#__PURE__*/ React.createElement(DefaultSvg, null),\n            tabIndex\n        },\n        elementType: 'span'\n    });\n    if (labelShorthand && nativeRoot && !nativeRoot['aria-labelledby']) {\n        nativeRoot['aria-labelledby'] = labelShorthand.id;\n    }\n    const state = {\n        appearance,\n        delay,\n        labelPosition,\n        size,\n        shouldRenderSpinner: !delay || isShownAfterDelay,\n        components: {\n            root: 'div',\n            spinner: 'span',\n            label: Label\n        },\n        root: nativeRoot,\n        spinner: spinnerShortHand,\n        label: labelShorthand\n    };\n    return state;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}