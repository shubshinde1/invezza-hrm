{"ast":null,"code":"import * as React from 'react';\nimport { getIntrinsicElementProps, slot, useEventCallback } from '@fluentui/react-utilities';\nimport { useAccordionContext_unstable } from '../../contexts/accordion';\n/**\n * Returns the props and state required to render the component\n * @param props - AccordionItem properties\n * @param ref - reference to root HTMLElement of AccordionItem\n */\nexport const useAccordionItem_unstable = (props, ref) => {\n  const {\n    value,\n    disabled = false\n  } = props;\n  const requestToggle = useAccordionContext_unstable(ctx => ctx.requestToggle);\n  const open = useAccordionContext_unstable(ctx => ctx.openItems.includes(value));\n  const onAccordionHeaderClick = useEventCallback(event => requestToggle({\n    event,\n    value\n  }));\n  return {\n    open,\n    value,\n    disabled,\n    onHeaderClick: onAccordionHeaderClick,\n    components: {\n      root: 'div'\n    },\n    root: slot.always(getIntrinsicElementProps('div', {\n      // FIXME:\n      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n      // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n      ref: ref,\n      ...props\n    }), {\n      elementType: 'div'\n    })\n  };\n};","map":{"version":3,"names":["React","getIntrinsicElementProps","slot","useEventCallback","useAccordionContext_unstable","useAccordionItem_unstable","props","ref","value","disabled","requestToggle","ctx","open","openItems","includes","onAccordionHeaderClick","event","onHeaderClick","components","root","always","elementType"],"sources":["D:/shubh/invezza-hrm/node_modules/@fluentui/react-accordion/lib/components/AccordionItem/useAccordionItem.js"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, slot, useEventCallback } from '@fluentui/react-utilities';\nimport { useAccordionContext_unstable } from '../../contexts/accordion';\n/**\n * Returns the props and state required to render the component\n * @param props - AccordionItem properties\n * @param ref - reference to root HTMLElement of AccordionItem\n */ export const useAccordionItem_unstable = (props, ref)=>{\n    const { value, disabled = false } = props;\n    const requestToggle = useAccordionContext_unstable((ctx)=>ctx.requestToggle);\n    const open = useAccordionContext_unstable((ctx)=>ctx.openItems.includes(value));\n    const onAccordionHeaderClick = useEventCallback((event)=>requestToggle({\n            event,\n            value\n        }));\n    return {\n        open,\n        value,\n        disabled,\n        onHeaderClick: onAccordionHeaderClick,\n        components: {\n            root: 'div'\n        },\n        root: slot.always(getIntrinsicElementProps('div', {\n            // FIXME:\n            // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n            // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n            ref: ref,\n            ...props\n        }), {\n            elementType: 'div'\n        })\n    };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,wBAAwB,EAAEC,IAAI,EAAEC,gBAAgB,QAAQ,2BAA2B;AAC5F,SAASC,4BAA4B,QAAQ,0BAA0B;AACvE;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAMC,yBAAyB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAG;EACvD,MAAM;IAAEC,KAAK;IAAEC,QAAQ,GAAG;EAAM,CAAC,GAAGH,KAAK;EACzC,MAAMI,aAAa,GAAGN,4BAA4B,CAAEO,GAAG,IAAGA,GAAG,CAACD,aAAa,CAAC;EAC5E,MAAME,IAAI,GAAGR,4BAA4B,CAAEO,GAAG,IAAGA,GAAG,CAACE,SAAS,CAACC,QAAQ,CAACN,KAAK,CAAC,CAAC;EAC/E,MAAMO,sBAAsB,GAAGZ,gBAAgB,CAAEa,KAAK,IAAGN,aAAa,CAAC;IAC/DM,KAAK;IACLR;EACJ,CAAC,CAAC,CAAC;EACP,OAAO;IACHI,IAAI;IACJJ,KAAK;IACLC,QAAQ;IACRQ,aAAa,EAAEF,sBAAsB;IACrCG,UAAU,EAAE;MACRC,IAAI,EAAE;IACV,CAAC;IACDA,IAAI,EAAEjB,IAAI,CAACkB,MAAM,CAACnB,wBAAwB,CAAC,KAAK,EAAE;MAC9C;MACA;MACA;MACAM,GAAG,EAAEA,GAAG;MACR,GAAGD;IACP,CAAC,CAAC,EAAE;MACAe,WAAW,EAAE;IACjB,CAAC;EACL,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}