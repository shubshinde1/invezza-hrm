{"ast":null,"code":"import * as React from 'react';\nimport { isHTMLElement, useEventCallback, useForceUpdate } from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { createToaster } from './vanilla';\nimport { EVENTS } from './constants';\nexport function useToaster(options = {}) {\n  const forceUpdate = useForceUpdate();\n  const {\n    toasterId: userToasterId,\n    shortcuts\n  } = options;\n  // Currently the toaster options can never be changed at runtime\n  const [toaster] = React.useState(() => createToaster(options));\n  const {\n    targetDocument\n  } = useFluent();\n  const lastActiveElementRef = React.useRef(null);\n  const isCorrectToaster = useEventCallback(toasterId => {\n    return toasterId === userToasterId;\n  });\n  const isFocusShortcut = useEventCallback(e => {\n    if (shortcuts === null || shortcuts === void 0 ? void 0 : shortcuts.focus) {\n      return shortcuts.focus(e);\n    }\n  });\n  const pauseAllToasts = React.useCallback(() => {\n    toaster.visibleToasts.forEach(toastId => {\n      var _toast_imperativeRef_current;\n      const toast = toaster.toasts.get(toastId);\n      toast === null || toast === void 0 ? void 0 : (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.pause();\n    });\n  }, [toaster]);\n  const playAllToasts = React.useCallback(() => {\n    toaster.visibleToasts.forEach(toastId => {\n      var _toast_imperativeRef_current;\n      const toast = toaster.toasts.get(toastId);\n      toast === null || toast === void 0 ? void 0 : (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.play();\n    });\n  }, [toaster]);\n  const getMostRecentVisibleToast = React.useCallback(() => {\n    return Array.from(toaster.visibleToasts).reduce((cur, next) => {\n      const toast = toaster.toasts.get(next);\n      if (!toast) {\n        return cur;\n      }\n      if (!cur) {\n        return toast;\n      }\n      if (cur.order < (toast === null || toast === void 0 ? void 0 : toast.order)) {\n        return toast;\n      }\n      return cur;\n    }, undefined);\n  }, [toaster]);\n  const tryRestoreFocus = React.useCallback(() => {\n    const mostRecentToast = getMostRecentVisibleToast();\n    if (mostRecentToast === null || mostRecentToast === void 0 ? void 0 : mostRecentToast.imperativeRef.current) {\n      mostRecentToast.imperativeRef.current.focus();\n    } else {\n      var _lastActiveElementRef_current;\n      (_lastActiveElementRef_current = lastActiveElementRef.current) === null || _lastActiveElementRef_current === void 0 ? void 0 : _lastActiveElementRef_current.focus();\n      lastActiveElementRef.current = null;\n    }\n  }, [getMostRecentVisibleToast]);\n  const closeAllToasts = React.useCallback(() => {\n    toaster.visibleToasts.forEach(toastId => {\n      const toast = toaster.toasts.get(toastId);\n      toast === null || toast === void 0 ? void 0 : toast.close();\n    });\n    tryRestoreFocus();\n  }, [toaster, tryRestoreFocus]);\n  React.useEffect(() => {\n    if (!targetDocument) {\n      return;\n    }\n    const addToastListener = (eventType, callback) => {\n      const listener = e => {\n        if (!isCorrectToaster(e.detail.toasterId)) {\n          return;\n        }\n        callback(e);\n        forceUpdate();\n      };\n      targetDocument.addEventListener(eventType, listener);\n      return () => targetDocument.removeEventListener(eventType, listener);\n    };\n    const buildToast = e => {\n      toaster.buildToast(e.detail, forceUpdate);\n    };\n    const dismissToast = e => {\n      toaster.dismissToast(e.detail.toastId);\n    };\n    const updateToast = e => {\n      toaster.updateToast(e.detail);\n    };\n    const dismissAllToasts = e => {\n      toaster.dismissAllToasts();\n    };\n    const pauseToast = e => {\n      const toast = toaster.toasts.get(e.detail.toastId);\n      if (toast) {\n        var _toast_imperativeRef_current;\n        (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.pause();\n      }\n    };\n    const playToast = e => {\n      const toast = toaster.toasts.get(e.detail.toastId);\n      if (toast) {\n        var _toast_imperativeRef_current;\n        (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.play();\n      }\n    };\n    const cleanupBuildListener = addToastListener(EVENTS.show, buildToast);\n    const cleanupUpdateListener = addToastListener(EVENTS.update, updateToast);\n    const cleanupDismissListener = addToastListener(EVENTS.dismiss, dismissToast);\n    const cleanupDismissAllListener = addToastListener(EVENTS.dismissAll, dismissAllToasts);\n    const cleanupPauseListener = addToastListener(EVENTS.pause, pauseToast);\n    const cleanupPlayListener = addToastListener(EVENTS.play, playToast);\n    const focusShortcutListener = e => {\n      if (isFocusShortcut(e)) {\n        pauseAllToasts();\n        const mostRecentToast = getMostRecentVisibleToast();\n        if (mostRecentToast) {\n          var _mostRecentToast_imperativeRef_current;\n          lastActiveElementRef.current = isHTMLElement(targetDocument.activeElement) ? targetDocument.activeElement : null;\n          (_mostRecentToast_imperativeRef_current = mostRecentToast.imperativeRef.current) === null || _mostRecentToast_imperativeRef_current === void 0 ? void 0 : _mostRecentToast_imperativeRef_current.focus();\n        }\n      }\n    };\n    targetDocument.addEventListener('keydown', focusShortcutListener);\n    return () => {\n      cleanupBuildListener();\n      cleanupDismissAllListener();\n      cleanupUpdateListener();\n      cleanupDismissListener();\n      cleanupPauseListener();\n      cleanupPlayListener();\n      targetDocument.removeEventListener('keydown', focusShortcutListener);\n    };\n  }, [toaster, forceUpdate, targetDocument, isCorrectToaster, pauseAllToasts, getMostRecentVisibleToast, isFocusShortcut]);\n  const toastsToRender = (() => {\n    if (!toaster) {\n      return new Map();\n    }\n    const toRender = new Map();\n    const toasts = Array.from(toaster.toasts.values());\n    toasts.forEach(toast => {\n      const {\n        position\n      } = toast;\n      toRender.has(position) || toRender.set(position, []);\n      if (position.startsWith('bottom')) {\n        toRender.get(position).push(toast);\n      } else {\n        toRender.get(position).unshift(toast);\n      }\n    });\n    return toRender;\n  })();\n  return {\n    isToastVisible: toaster.isToastVisible,\n    toastsToRender,\n    pauseAllToasts,\n    playAllToasts,\n    tryRestoreFocus,\n    closeAllToasts\n  };\n}","map":{"version":3,"names":["React","isHTMLElement","useEventCallback","useForceUpdate","useFluent_unstable","useFluent","createToaster","EVENTS","useToaster","options","forceUpdate","toasterId","userToasterId","shortcuts","toaster","useState","targetDocument","lastActiveElementRef","useRef","isCorrectToaster","isFocusShortcut","e","focus","pauseAllToasts","useCallback","visibleToasts","forEach","toastId","_toast_imperativeRef_current","toast","toasts","get","imperativeRef","current","pause","playAllToasts","play","getMostRecentVisibleToast","Array","from","reduce","cur","next","order","undefined","tryRestoreFocus","mostRecentToast","_lastActiveElementRef_current","closeAllToasts","close","useEffect","addToastListener","eventType","callback","listener","detail","addEventListener","removeEventListener","buildToast","dismissToast","updateToast","dismissAllToasts","pauseToast","playToast","cleanupBuildListener","show","cleanupUpdateListener","update","cleanupDismissListener","dismiss","cleanupDismissAllListener","dismissAll","cleanupPauseListener","cleanupPlayListener","focusShortcutListener","_mostRecentToast_imperativeRef_current","activeElement","toastsToRender","Map","toRender","values","position","has","set","startsWith","push","unshift","isToastVisible"],"sources":["D:/shubh/invezza-hrm/node_modules/@fluentui/react-toast/lib/state/useToaster.js"],"sourcesContent":["import * as React from 'react';\nimport { isHTMLElement, useEventCallback, useForceUpdate } from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { createToaster } from './vanilla';\nimport { EVENTS } from './constants';\nexport function useToaster(options = {}) {\n    const forceUpdate = useForceUpdate();\n    const { toasterId: userToasterId, shortcuts } = options;\n    // Currently the toaster options can never be changed at runtime\n    const [toaster] = React.useState(()=>createToaster(options));\n    const { targetDocument } = useFluent();\n    const lastActiveElementRef = React.useRef(null);\n    const isCorrectToaster = useEventCallback((toasterId)=>{\n        return toasterId === userToasterId;\n    });\n    const isFocusShortcut = useEventCallback((e)=>{\n        if (shortcuts === null || shortcuts === void 0 ? void 0 : shortcuts.focus) {\n            return shortcuts.focus(e);\n        }\n    });\n    const pauseAllToasts = React.useCallback(()=>{\n        toaster.visibleToasts.forEach((toastId)=>{\n            var _toast_imperativeRef_current;\n            const toast = toaster.toasts.get(toastId);\n            toast === null || toast === void 0 ? void 0 : (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.pause();\n        });\n    }, [\n        toaster\n    ]);\n    const playAllToasts = React.useCallback(()=>{\n        toaster.visibleToasts.forEach((toastId)=>{\n            var _toast_imperativeRef_current;\n            const toast = toaster.toasts.get(toastId);\n            toast === null || toast === void 0 ? void 0 : (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.play();\n        });\n    }, [\n        toaster\n    ]);\n    const getMostRecentVisibleToast = React.useCallback(()=>{\n        return Array.from(toaster.visibleToasts).reduce((cur, next)=>{\n            const toast = toaster.toasts.get(next);\n            if (!toast) {\n                return cur;\n            }\n            if (!cur) {\n                return toast;\n            }\n            if (cur.order < (toast === null || toast === void 0 ? void 0 : toast.order)) {\n                return toast;\n            }\n            return cur;\n        }, undefined);\n    }, [\n        toaster\n    ]);\n    const tryRestoreFocus = React.useCallback(()=>{\n        const mostRecentToast = getMostRecentVisibleToast();\n        if (mostRecentToast === null || mostRecentToast === void 0 ? void 0 : mostRecentToast.imperativeRef.current) {\n            mostRecentToast.imperativeRef.current.focus();\n        } else {\n            var _lastActiveElementRef_current;\n            (_lastActiveElementRef_current = lastActiveElementRef.current) === null || _lastActiveElementRef_current === void 0 ? void 0 : _lastActiveElementRef_current.focus();\n            lastActiveElementRef.current = null;\n        }\n    }, [\n        getMostRecentVisibleToast\n    ]);\n    const closeAllToasts = React.useCallback(()=>{\n        toaster.visibleToasts.forEach((toastId)=>{\n            const toast = toaster.toasts.get(toastId);\n            toast === null || toast === void 0 ? void 0 : toast.close();\n        });\n        tryRestoreFocus();\n    }, [\n        toaster,\n        tryRestoreFocus\n    ]);\n    React.useEffect(()=>{\n        if (!targetDocument) {\n            return;\n        }\n        const addToastListener = (eventType, callback)=>{\n            const listener = (e)=>{\n                if (!isCorrectToaster(e.detail.toasterId)) {\n                    return;\n                }\n                callback(e);\n                forceUpdate();\n            };\n            targetDocument.addEventListener(eventType, listener);\n            return ()=>targetDocument.removeEventListener(eventType, listener);\n        };\n        const buildToast = (e)=>{\n            toaster.buildToast(e.detail, forceUpdate);\n        };\n        const dismissToast = (e)=>{\n            toaster.dismissToast(e.detail.toastId);\n        };\n        const updateToast = (e)=>{\n            toaster.updateToast(e.detail);\n        };\n        const dismissAllToasts = (e)=>{\n            toaster.dismissAllToasts();\n        };\n        const pauseToast = (e)=>{\n            const toast = toaster.toasts.get(e.detail.toastId);\n            if (toast) {\n                var _toast_imperativeRef_current;\n                (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.pause();\n            }\n        };\n        const playToast = (e)=>{\n            const toast = toaster.toasts.get(e.detail.toastId);\n            if (toast) {\n                var _toast_imperativeRef_current;\n                (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.play();\n            }\n        };\n        const cleanupBuildListener = addToastListener(EVENTS.show, buildToast);\n        const cleanupUpdateListener = addToastListener(EVENTS.update, updateToast);\n        const cleanupDismissListener = addToastListener(EVENTS.dismiss, dismissToast);\n        const cleanupDismissAllListener = addToastListener(EVENTS.dismissAll, dismissAllToasts);\n        const cleanupPauseListener = addToastListener(EVENTS.pause, pauseToast);\n        const cleanupPlayListener = addToastListener(EVENTS.play, playToast);\n        const focusShortcutListener = (e)=>{\n            if (isFocusShortcut(e)) {\n                pauseAllToasts();\n                const mostRecentToast = getMostRecentVisibleToast();\n                if (mostRecentToast) {\n                    var _mostRecentToast_imperativeRef_current;\n                    lastActiveElementRef.current = isHTMLElement(targetDocument.activeElement) ? targetDocument.activeElement : null;\n                    (_mostRecentToast_imperativeRef_current = mostRecentToast.imperativeRef.current) === null || _mostRecentToast_imperativeRef_current === void 0 ? void 0 : _mostRecentToast_imperativeRef_current.focus();\n                }\n            }\n        };\n        targetDocument.addEventListener('keydown', focusShortcutListener);\n        return ()=>{\n            cleanupBuildListener();\n            cleanupDismissAllListener();\n            cleanupUpdateListener();\n            cleanupDismissListener();\n            cleanupPauseListener();\n            cleanupPlayListener();\n            targetDocument.removeEventListener('keydown', focusShortcutListener);\n        };\n    }, [\n        toaster,\n        forceUpdate,\n        targetDocument,\n        isCorrectToaster,\n        pauseAllToasts,\n        getMostRecentVisibleToast,\n        isFocusShortcut\n    ]);\n    const toastsToRender = (()=>{\n        if (!toaster) {\n            return new Map();\n        }\n        const toRender = new Map();\n        const toasts = Array.from(toaster.toasts.values());\n        toasts.forEach((toast)=>{\n            const { position } = toast;\n            toRender.has(position) || toRender.set(position, []);\n            if (position.startsWith('bottom')) {\n                toRender.get(position).push(toast);\n            } else {\n                toRender.get(position).unshift(toast);\n            }\n        });\n        return toRender;\n    })();\n    return {\n        isToastVisible: toaster.isToastVisible,\n        toastsToRender,\n        pauseAllToasts,\n        playAllToasts,\n        tryRestoreFocus,\n        closeAllToasts\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}