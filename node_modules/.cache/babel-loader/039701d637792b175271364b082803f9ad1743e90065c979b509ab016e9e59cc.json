{"ast":null,"code":"'use client';\n\nimport { keys } from '../../../../core/utils/keys/keys.mjs';\nimport { rem } from '../../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getBreakpointValue } from '../../../../core/utils/get-breakpoint-value/get-breakpoint-value.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../../core/MantineProvider/default-theme.mjs';\nimport '../../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../../core/Box/Box.mjs';\nimport '../../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getBaseSize } from '../get-base-size/get-base-size.mjs';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size.mjs';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size.mjs';\nfunction assignNavbarVariables(_ref) {\n  var _navbar$collapsed, _navbar$collapsed2, _navbar$collapsed3;\n  let {\n    baseStyles,\n    minMediaStyles,\n    maxMediaStyles,\n    navbar,\n    theme\n  } = _ref;\n  const navbarWidth = navbar === null || navbar === void 0 ? void 0 : navbar.width;\n  const collapsedNavbarTransform = \"translateX(calc(var(--app-shell-navbar-width) * -1))\";\n  const collapsedNavbarTransformRtl = \"translateX(var(--app-shell-navbar-width))\";\n  if (navbar !== null && navbar !== void 0 && navbar.breakpoint && !(navbar !== null && navbar !== void 0 && (_navbar$collapsed = navbar.collapsed) !== null && _navbar$collapsed !== void 0 && _navbar$collapsed.mobile)) {\n    maxMediaStyles[navbar === null || navbar === void 0 ? void 0 : navbar.breakpoint] = maxMediaStyles[navbar === null || navbar === void 0 ? void 0 : navbar.breakpoint] || {};\n    maxMediaStyles[navbar === null || navbar === void 0 ? void 0 : navbar.breakpoint][\"--app-shell-navbar-width\"] = \"100%\";\n    maxMediaStyles[navbar === null || navbar === void 0 ? void 0 : navbar.breakpoint][\"--app-shell-navbar-offset\"] = \"0px\";\n  }\n  if (isPrimitiveSize(navbarWidth)) {\n    const baseSize = rem(getBaseSize(navbarWidth));\n    baseStyles[\"--app-shell-navbar-width\"] = baseSize;\n    baseStyles[\"--app-shell-navbar-offset\"] = baseSize;\n  }\n  if (isResponsiveSize(navbarWidth)) {\n    if (typeof navbarWidth.base !== \"undefined\") {\n      baseStyles[\"--app-shell-navbar-width\"] = rem(navbarWidth.base);\n      baseStyles[\"--app-shell-navbar-offset\"] = rem(navbarWidth.base);\n    }\n    keys(navbarWidth).forEach(key => {\n      if (key !== \"base\") {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key][\"--app-shell-navbar-width\"] = rem(navbarWidth[key]);\n        minMediaStyles[key][\"--app-shell-navbar-offset\"] = rem(navbarWidth[key]);\n      }\n    });\n  }\n  if (navbar !== null && navbar !== void 0 && (_navbar$collapsed2 = navbar.collapsed) !== null && _navbar$collapsed2 !== void 0 && _navbar$collapsed2.desktop) {\n    const breakpointValue = navbar.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue][\"--app-shell-navbar-transform\"] = collapsedNavbarTransform;\n    minMediaStyles[breakpointValue][\"--app-shell-navbar-transform-rtl\"] = collapsedNavbarTransformRtl;\n    minMediaStyles[breakpointValue][\"--app-shell-navbar-offset\"] = \"0px !important\";\n  }\n  if (navbar !== null && navbar !== void 0 && (_navbar$collapsed3 = navbar.collapsed) !== null && _navbar$collapsed3 !== void 0 && _navbar$collapsed3.mobile) {\n    const breakpointValue = getBreakpointValue(navbar.breakpoint, theme) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue][\"--app-shell-navbar-width\"] = \"100%\";\n    maxMediaStyles[breakpointValue][\"--app-shell-navbar-offset\"] = \"0px\";\n    maxMediaStyles[breakpointValue][\"--app-shell-navbar-transform\"] = collapsedNavbarTransform;\n    maxMediaStyles[breakpointValue][\"--app-shell-navbar-transform-rtl\"] = collapsedNavbarTransformRtl;\n  }\n}\nexport { assignNavbarVariables };","map":{"version":3,"names":["assignNavbarVariables","_ref","_navbar$collapsed","_navbar$collapsed2","_navbar$collapsed3","baseStyles","minMediaStyles","maxMediaStyles","navbar","theme","navbarWidth","width","collapsedNavbarTransform","collapsedNavbarTransformRtl","breakpoint","collapsed","mobile","isPrimitiveSize","baseSize","rem","getBaseSize","isResponsiveSize","base","keys","forEach","key","desktop","breakpointValue","getBreakpointValue"],"sources":["D:\\shubh\\invezza-hrm\\node_modules\\@mantine\\core\\src\\components\\AppShell\\AppShellMediaStyles\\assign-navbar-variables\\assign-navbar-variables.ts"],"sourcesContent":["import { getBreakpointValue, keys, MantineTheme, rem } from '../../../../core';\nimport type { AppShellProps } from '../../AppShell';\nimport { getBaseSize } from '../get-base-size/get-base-size';\nimport type { CSSVariables, MediaQueryVariables } from '../get-variables/get-variables';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size';\n\ninterface AssignNavbarVariablesInput {\n  baseStyles: CSSVariables;\n  minMediaStyles: MediaQueryVariables;\n  maxMediaStyles: MediaQueryVariables;\n  navbar: AppShellProps['navbar'] | undefined;\n  theme: MantineTheme;\n}\n\nexport function assignNavbarVariables({\n  baseStyles,\n  minMediaStyles,\n  maxMediaStyles,\n  navbar,\n  theme,\n}: AssignNavbarVariablesInput) {\n  const navbarWidth = navbar?.width;\n  const collapsedNavbarTransform = 'translateX(calc(var(--app-shell-navbar-width) * -1))';\n  const collapsedNavbarTransformRtl = 'translateX(var(--app-shell-navbar-width))';\n\n  if (navbar?.breakpoint && !navbar?.collapsed?.mobile) {\n    maxMediaStyles[navbar?.breakpoint] = maxMediaStyles[navbar?.breakpoint] || {};\n    maxMediaStyles[navbar?.breakpoint]['--app-shell-navbar-width'] = '100%';\n    maxMediaStyles[navbar?.breakpoint]['--app-shell-navbar-offset'] = '0px';\n  }\n\n  if (isPrimitiveSize(navbarWidth)) {\n    const baseSize = rem(getBaseSize(navbarWidth));\n    baseStyles['--app-shell-navbar-width'] = baseSize;\n    baseStyles['--app-shell-navbar-offset'] = baseSize;\n  }\n\n  if (isResponsiveSize(navbarWidth)) {\n    if (typeof navbarWidth.base !== 'undefined') {\n      baseStyles['--app-shell-navbar-width'] = rem(navbarWidth.base);\n      baseStyles['--app-shell-navbar-offset'] = rem(navbarWidth.base);\n    }\n\n    keys(navbarWidth).forEach((key) => {\n      if (key !== 'base') {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key]['--app-shell-navbar-width'] = rem(navbarWidth![key]);\n        minMediaStyles[key]['--app-shell-navbar-offset'] = rem(navbarWidth![key]);\n      }\n    });\n  }\n\n  if (navbar?.collapsed?.desktop) {\n    const breakpointValue = navbar!.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue]['--app-shell-navbar-transform'] = collapsedNavbarTransform;\n    minMediaStyles[breakpointValue]['--app-shell-navbar-transform-rtl'] =\n      collapsedNavbarTransformRtl;\n    minMediaStyles[breakpointValue]['--app-shell-navbar-offset'] = '0px !important';\n  }\n\n  if (navbar?.collapsed?.mobile) {\n    const breakpointValue = getBreakpointValue(navbar!.breakpoint, theme) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue]['--app-shell-navbar-width'] = '100%';\n    maxMediaStyles[breakpointValue]['--app-shell-navbar-offset'] = '0px';\n    maxMediaStyles[breakpointValue]['--app-shell-navbar-transform'] = collapsedNavbarTransform;\n    maxMediaStyles[breakpointValue]['--app-shell-navbar-transform-rtl'] =\n      collapsedNavbarTransformRtl;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}