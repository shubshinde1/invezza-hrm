{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport cx from 'clsx';\nimport '../../Checkbox/Checkbox.mjs';\nimport '../../Checkbox/CheckboxGroup/CheckboxGroup.mjs';\nimport { CheckIcon } from '../../Checkbox/CheckIcon.mjs';\nimport { ScrollArea } from '../../ScrollArea/ScrollArea.mjs';\nimport { Combobox } from '../Combobox.mjs';\nimport { defaultOptionsFilter } from './default-options-filter.mjs';\nimport { isEmptyComboboxData } from './is-empty-combobox-data.mjs';\nimport { isOptionsGroup } from './is-options-group.mjs';\nimport { validateOptions } from './validate-options.mjs';\nimport classes from '../Combobox.module.css.mjs';\nfunction isValueChecked(value, optionValue) {\n  return Array.isArray(value) ? value.includes(optionValue) : value === optionValue;\n}\nfunction Option({\n  data,\n  withCheckIcon,\n  value,\n  checkIconPosition,\n  unstyled,\n  renderOption\n}) {\n  if (!isOptionsGroup(data)) {\n    const checked = isValueChecked(value, data.value);\n    const check = withCheckIcon && checked && /* @__PURE__ */React.createElement(CheckIcon, {\n      className: classes.optionsDropdownCheckIcon\n    });\n    const defaultContent = /* @__PURE__ */React.createElement(React.Fragment, null, checkIconPosition === \"left\" && check, /* @__PURE__ */React.createElement(\"span\", null, data.label), checkIconPosition === \"right\" && check);\n    return /* @__PURE__ */React.createElement(Combobox.Option, {\n      value: data.value,\n      disabled: data.disabled,\n      className: cx({\n        [classes.optionsDropdownOption]: !unstyled\n      }),\n      \"data-reverse\": checkIconPosition === \"right\" || void 0,\n      \"data-checked\": checked || void 0,\n      \"aria-selected\": checked,\n      active: checked\n    }, typeof renderOption === \"function\" ? renderOption({\n      option: data,\n      checked\n    }) : defaultContent);\n  }\n  const options = data.items.map(item => /* @__PURE__ */React.createElement(Option, {\n    data: item,\n    value,\n    key: item.value,\n    unstyled,\n    withCheckIcon,\n    checkIconPosition\n  }));\n  return /* @__PURE__ */React.createElement(Combobox.Group, {\n    label: data.group\n  }, options);\n}\nfunction OptionsDropdown({\n  data,\n  hidden,\n  hiddenWhenEmpty,\n  filter,\n  search,\n  limit,\n  maxDropdownHeight,\n  withScrollArea = true,\n  filterOptions = true,\n  withCheckIcon = false,\n  value,\n  checkIconPosition,\n  nothingFoundMessage,\n  unstyled,\n  labelId,\n  renderOption\n}) {\n  validateOptions(data);\n  const shouldFilter = typeof search === \"string\";\n  const filteredData = shouldFilter ? (filter || defaultOptionsFilter)({\n    options: data,\n    search: filterOptions ? search : \"\",\n    limit: limit ?? Infinity\n  }) : data;\n  const isEmpty = isEmptyComboboxData(filteredData);\n  const options = filteredData.map(item => /* @__PURE__ */React.createElement(Option, {\n    data: item,\n    key: isOptionsGroup(item) ? item.group : item.value,\n    withCheckIcon,\n    value,\n    checkIconPosition,\n    unstyled,\n    renderOption\n  }));\n  return /* @__PURE__ */React.createElement(Combobox.Dropdown, {\n    hidden: hidden || hiddenWhenEmpty && isEmpty\n  }, /* @__PURE__ */React.createElement(Combobox.Options, {\n    labelledBy: labelId\n  }, withScrollArea ? /* @__PURE__ */React.createElement(ScrollArea.Autosize, {\n    mah: maxDropdownHeight ?? 220,\n    type: \"scroll\",\n    scrollbarSize: \"var(--combobox-padding)\",\n    offsetScrollbars: \"y\"\n  }, options) : options, isEmpty && nothingFoundMessage && /* @__PURE__ */React.createElement(Combobox.Empty, null, nothingFoundMessage)));\n}\nexport { OptionsDropdown };","map":{"version":3,"names":["isValueChecked","value","optionValue","Array","isArray","includes","Option","data","withCheckIcon","checkIconPosition","unstyled","renderOption","isOptionsGroup","checked","check","React","createElement","CheckIcon","className","classes","optionsDropdownCheckIcon","defaultContent","Fragment","label","Combobox","disabled","cx","optionsDropdownOption","active","option","options","items","map","item","key","Group","group","OptionsDropdown","hidden","hiddenWhenEmpty","filter","search","limit","maxDropdownHeight","withScrollArea","filterOptions","nothingFoundMessage","labelId","validateOptions","shouldFilter","filteredData","defaultOptionsFilter","Infinity","isEmpty","isEmptyComboboxData","Dropdown","Options","labelledBy","ScrollArea","Autosize","mah","type","scrollbarSize","offsetScrollbars","Empty"],"sources":["D:\\shubh\\invezza-hrm\\node_modules\\@mantine\\core\\src\\components\\Combobox\\OptionsDropdown\\OptionsDropdown.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { CheckIcon } from '../../Checkbox';\nimport { ScrollArea } from '../../ScrollArea/ScrollArea';\nimport { Combobox } from '../Combobox';\nimport { ComboboxItem, ComboboxLikeRenderOptionInput, ComboboxParsedItem } from '../Combobox.types';\nimport { defaultOptionsFilter, FilterOptionsInput } from './default-options-filter';\nimport { isEmptyComboboxData } from './is-empty-combobox-data';\nimport { isOptionsGroup } from './is-options-group';\nimport { validateOptions } from './validate-options';\nimport classes from '../Combobox.module.css';\n\nexport type OptionsFilter = (input: FilterOptionsInput) => ComboboxParsedItem[];\n\nexport interface OptionsGroup {\n  group: string;\n  items: ComboboxItem[];\n}\n\nexport type OptionsData = (ComboboxItem | OptionsGroup)[];\n\ninterface OptionProps {\n  data: ComboboxItem | OptionsGroup;\n  withCheckIcon?: boolean;\n  value?: string | string[] | null;\n  checkIconPosition?: 'left' | 'right';\n  unstyled: boolean | undefined;\n  renderOption?: (input: ComboboxLikeRenderOptionInput<any>) => React.ReactNode;\n}\n\nfunction isValueChecked(value: string | string[] | undefined | null, optionValue: string) {\n  return Array.isArray(value) ? value.includes(optionValue) : value === optionValue;\n}\n\nfunction Option({\n  data,\n  withCheckIcon,\n  value,\n  checkIconPosition,\n  unstyled,\n  renderOption,\n}: OptionProps) {\n  if (!isOptionsGroup(data)) {\n    const checked = isValueChecked(value, data.value);\n    const check = withCheckIcon && checked && (\n      <CheckIcon className={classes.optionsDropdownCheckIcon} />\n    );\n\n    const defaultContent = (\n      <>\n        {checkIconPosition === 'left' && check}\n        <span>{data.label}</span>\n        {checkIconPosition === 'right' && check}\n      </>\n    );\n\n    return (\n      <Combobox.Option\n        value={data.value}\n        disabled={data.disabled}\n        className={cx({ [classes.optionsDropdownOption]: !unstyled })}\n        data-reverse={checkIconPosition === 'right' || undefined}\n        data-checked={checked || undefined}\n        aria-selected={checked}\n        active={checked}\n      >\n        {typeof renderOption === 'function'\n          ? renderOption({ option: data, checked })\n          : defaultContent}\n      </Combobox.Option>\n    );\n  }\n\n  const options = data.items.map((item) => (\n    <Option\n      data={item}\n      value={value}\n      key={item.value}\n      unstyled={unstyled}\n      withCheckIcon={withCheckIcon}\n      checkIconPosition={checkIconPosition}\n    />\n  ));\n\n  return <Combobox.Group label={data.group}>{options}</Combobox.Group>;\n}\n\nexport interface OptionsDropdownProps {\n  data: OptionsData;\n  filter: OptionsFilter | undefined;\n  search: string | undefined;\n  limit: number | undefined;\n  withScrollArea: boolean | undefined;\n  maxDropdownHeight: number | string | undefined;\n  hidden?: boolean;\n  hiddenWhenEmpty?: boolean;\n  filterOptions?: boolean;\n  withCheckIcon?: boolean;\n  value?: string | string[] | null;\n  checkIconPosition?: 'left' | 'right';\n  nothingFoundMessage?: React.ReactNode;\n  unstyled: boolean | undefined;\n  labelId: string;\n  renderOption?: (input: ComboboxLikeRenderOptionInput<any>) => React.ReactNode;\n}\n\nexport function OptionsDropdown({\n  data,\n  hidden,\n  hiddenWhenEmpty,\n  filter,\n  search,\n  limit,\n  maxDropdownHeight,\n  withScrollArea = true,\n  filterOptions = true,\n  withCheckIcon = false,\n  value,\n  checkIconPosition,\n  nothingFoundMessage,\n  unstyled,\n  labelId,\n  renderOption,\n}: OptionsDropdownProps) {\n  validateOptions(data);\n\n  const shouldFilter = typeof search === 'string';\n  const filteredData = shouldFilter\n    ? (filter || defaultOptionsFilter)({\n        options: data,\n        search: filterOptions ? search : '',\n        limit: limit ?? Infinity,\n      })\n    : data;\n  const isEmpty = isEmptyComboboxData(filteredData);\n\n  const options = filteredData.map((item) => (\n    <Option\n      data={item}\n      key={isOptionsGroup(item) ? item.group : item.value}\n      withCheckIcon={withCheckIcon}\n      value={value}\n      checkIconPosition={checkIconPosition}\n      unstyled={unstyled}\n      renderOption={renderOption}\n    />\n  ));\n\n  return (\n    <Combobox.Dropdown hidden={hidden || (hiddenWhenEmpty && isEmpty)}>\n      <Combobox.Options labelledBy={labelId}>\n        {withScrollArea ? (\n          <ScrollArea.Autosize\n            mah={maxDropdownHeight ?? 220}\n            type=\"scroll\"\n            scrollbarSize=\"var(--combobox-padding)\"\n            offsetScrollbars=\"y\"\n          >\n            {options}\n          </ScrollArea.Autosize>\n        ) : (\n          options\n        )}\n        {isEmpty && nothingFoundMessage && <Combobox.Empty>{nothingFoundMessage}</Combobox.Empty>}\n      </Combobox.Options>\n    </Combobox.Dropdown>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}