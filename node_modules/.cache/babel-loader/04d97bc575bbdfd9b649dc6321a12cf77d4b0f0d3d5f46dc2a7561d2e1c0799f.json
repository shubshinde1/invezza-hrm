{"ast":null,"code":"import * as keys from '@fluentui/keyboard-keys';\nimport * as React from 'react';\n/**\n * Converts a keyboard interaction into a defined action\n */\nexport function getDropdownActionFromKey(e, options = {}) {\n  const {\n    open = true,\n    multiselect = false\n  } = options;\n  const code = e.key;\n  const {\n    altKey,\n    ctrlKey,\n    key,\n    metaKey\n  } = e;\n  // typing action occurs whether open or closed\n  if (key.length === 1 && code !== keys.Space && !altKey && !ctrlKey && !metaKey) {\n    return 'Type';\n  }\n  // handle opening the dropdown if closed\n  if (!open) {\n    if (code === keys.ArrowDown || code === keys.ArrowUp || code === keys.Enter || code === keys.Space) {\n      return 'Open';\n    }\n    // if the dropdown is closed and an action did not match the above, do nothing\n    return 'None';\n  }\n  // select or close actions\n  if (code === keys.ArrowUp && altKey || code === keys.Enter || !multiselect && code === keys.Space) {\n    return 'CloseSelect';\n  }\n  if (multiselect && code === keys.Space) {\n    return 'Select';\n  }\n  if (code === keys.Escape) {\n    return 'Close';\n  }\n  // navigation interactions\n  if (code === keys.ArrowDown) {\n    return 'Next';\n  }\n  if (code === keys.ArrowUp) {\n    return 'Previous';\n  }\n  if (code === keys.Home) {\n    return 'First';\n  }\n  if (code === keys.End) {\n    return 'Last';\n  }\n  if (code === keys.PageUp) {\n    return 'PageUp';\n  }\n  if (code === keys.PageDown) {\n    return 'PageDown';\n  }\n  if (code === keys.Tab) {\n    return 'Tab';\n  }\n  // if nothing matched, return none\n  return 'None';\n}","map":{"version":3,"names":["keys","React","getDropdownActionFromKey","e","options","open","multiselect","code","key","altKey","ctrlKey","metaKey","length","Space","ArrowDown","ArrowUp","Enter","Escape","Home","End","PageUp","PageDown","Tab"],"sources":["D:/shubh/invezza-hrm/node_modules/@fluentui/react-combobox/lib/utils/dropdownKeyActions.js"],"sourcesContent":["import * as keys from '@fluentui/keyboard-keys';\nimport * as React from 'react';\n/**\n * Converts a keyboard interaction into a defined action\n */ export function getDropdownActionFromKey(e, options = {}) {\n    const { open = true, multiselect = false } = options;\n    const code = e.key;\n    const { altKey, ctrlKey, key, metaKey } = e;\n    // typing action occurs whether open or closed\n    if (key.length === 1 && code !== keys.Space && !altKey && !ctrlKey && !metaKey) {\n        return 'Type';\n    }\n    // handle opening the dropdown if closed\n    if (!open) {\n        if (code === keys.ArrowDown || code === keys.ArrowUp || code === keys.Enter || code === keys.Space) {\n            return 'Open';\n        }\n        // if the dropdown is closed and an action did not match the above, do nothing\n        return 'None';\n    }\n    // select or close actions\n    if (code === keys.ArrowUp && altKey || code === keys.Enter || !multiselect && code === keys.Space) {\n        return 'CloseSelect';\n    }\n    if (multiselect && code === keys.Space) {\n        return 'Select';\n    }\n    if (code === keys.Escape) {\n        return 'Close';\n    }\n    // navigation interactions\n    if (code === keys.ArrowDown) {\n        return 'Next';\n    }\n    if (code === keys.ArrowUp) {\n        return 'Previous';\n    }\n    if (code === keys.Home) {\n        return 'First';\n    }\n    if (code === keys.End) {\n        return 'Last';\n    }\n    if (code === keys.PageUp) {\n        return 'PageUp';\n    }\n    if (code === keys.PageDown) {\n        return 'PageDown';\n    }\n    if (code === keys.Tab) {\n        return 'Tab';\n    }\n    // if nothing matched, return none\n    return 'None';\n}\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,yBAAyB;AAC/C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B;AACA;AACA;AAAI,OAAO,SAASC,wBAAwBA,CAACC,CAAC,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAC1D,MAAM;IAAEC,IAAI,GAAG,IAAI;IAAEC,WAAW,GAAG;EAAM,CAAC,GAAGF,OAAO;EACpD,MAAMG,IAAI,GAAGJ,CAAC,CAACK,GAAG;EAClB,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEF,GAAG;IAAEG;EAAQ,CAAC,GAAGR,CAAC;EAC3C;EACA,IAAIK,GAAG,CAACI,MAAM,KAAK,CAAC,IAAIL,IAAI,KAAKP,IAAI,CAACa,KAAK,IAAI,CAACJ,MAAM,IAAI,CAACC,OAAO,IAAI,CAACC,OAAO,EAAE;IAC5E,OAAO,MAAM;EACjB;EACA;EACA,IAAI,CAACN,IAAI,EAAE;IACP,IAAIE,IAAI,KAAKP,IAAI,CAACc,SAAS,IAAIP,IAAI,KAAKP,IAAI,CAACe,OAAO,IAAIR,IAAI,KAAKP,IAAI,CAACgB,KAAK,IAAIT,IAAI,KAAKP,IAAI,CAACa,KAAK,EAAE;MAChG,OAAO,MAAM;IACjB;IACA;IACA,OAAO,MAAM;EACjB;EACA;EACA,IAAIN,IAAI,KAAKP,IAAI,CAACe,OAAO,IAAIN,MAAM,IAAIF,IAAI,KAAKP,IAAI,CAACgB,KAAK,IAAI,CAACV,WAAW,IAAIC,IAAI,KAAKP,IAAI,CAACa,KAAK,EAAE;IAC/F,OAAO,aAAa;EACxB;EACA,IAAIP,WAAW,IAAIC,IAAI,KAAKP,IAAI,CAACa,KAAK,EAAE;IACpC,OAAO,QAAQ;EACnB;EACA,IAAIN,IAAI,KAAKP,IAAI,CAACiB,MAAM,EAAE;IACtB,OAAO,OAAO;EAClB;EACA;EACA,IAAIV,IAAI,KAAKP,IAAI,CAACc,SAAS,EAAE;IACzB,OAAO,MAAM;EACjB;EACA,IAAIP,IAAI,KAAKP,IAAI,CAACe,OAAO,EAAE;IACvB,OAAO,UAAU;EACrB;EACA,IAAIR,IAAI,KAAKP,IAAI,CAACkB,IAAI,EAAE;IACpB,OAAO,OAAO;EAClB;EACA,IAAIX,IAAI,KAAKP,IAAI,CAACmB,GAAG,EAAE;IACnB,OAAO,MAAM;EACjB;EACA,IAAIZ,IAAI,KAAKP,IAAI,CAACoB,MAAM,EAAE;IACtB,OAAO,QAAQ;EACnB;EACA,IAAIb,IAAI,KAAKP,IAAI,CAACqB,QAAQ,EAAE;IACxB,OAAO,UAAU;EACrB;EACA,IAAId,IAAI,KAAKP,IAAI,CAACsB,GAAG,EAAE;IACnB,OAAO,KAAK;EAChB;EACA;EACA,OAAO,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}