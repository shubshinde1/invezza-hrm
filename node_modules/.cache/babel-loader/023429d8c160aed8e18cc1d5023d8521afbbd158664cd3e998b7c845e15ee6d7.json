{"ast":null,"code":"'use client';\n\nimport React, { forwardRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nconst ScrollAreaViewport = forwardRef((_ref, ref) => {\n  let {\n    children,\n    style,\n    ...others\n  } = _ref;\n  const ctx = useScrollAreaContext();\n  const rootRef = useMergedRef(ref, ctx.onViewportChange);\n  return /* @__PURE__ */React.createElement(Box, {\n    ...others,\n    ref: rootRef,\n    style: {\n      overflowX: ctx.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n      overflowY: ctx.scrollbarYEnabled ? \"scroll\" : \"hidden\",\n      ...style\n    }\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    style: {\n      minWidth: \"100%\",\n      display: \"table\"\n    },\n    ref: ctx.onContentChange\n  }, children));\n});\nScrollAreaViewport.displayName = \"@mantine/core/ScrollAreaViewport\";\nexport { ScrollAreaViewport };","map":{"version":3,"names":["ScrollAreaViewport","forwardRef","_ref","ref","children","style","others","ctx","useScrollAreaContext","rootRef","useMergedRef","onViewportChange","React","createElement","Box","overflowX","scrollbarXEnabled","overflowY","scrollbarYEnabled","minWidth","display","onContentChange","displayName"],"sources":["D:\\shubh\\invezza-hrm\\node_modules\\@mantine\\core\\src\\components\\ScrollArea\\ScrollAreaViewport\\ScrollAreaViewport.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { Box, BoxProps, ElementProps } from '../../../core';\nimport { useScrollAreaContext } from '../ScrollArea.context';\n\nexport interface ScrollAreaViewportProps extends BoxProps, ElementProps<'div'> {}\n\nexport const ScrollAreaViewport = forwardRef<HTMLDivElement, ScrollAreaViewportProps>(\n  ({ children, style, ...others }, ref) => {\n    const ctx = useScrollAreaContext();\n    const rootRef = useMergedRef(ref, ctx.onViewportChange);\n\n    return (\n      <Box\n        {...others}\n        ref={rootRef}\n        style={{\n          overflowX: ctx.scrollbarXEnabled ? 'scroll' : 'hidden',\n          overflowY: ctx.scrollbarYEnabled ? 'scroll' : 'hidden',\n          ...style,\n        }}\n      >\n        <div style={{ minWidth: '100%', display: 'table' }} ref={ctx.onContentChange}>\n          {children}\n        </div>\n      </Box>\n    );\n  }\n);\n\nScrollAreaViewport.displayName = '@mantine/core/ScrollAreaViewport';\n"],"mappings":";;;;;;;;;;;;AAKY,MAACA,kBAAkB,GAAGC,UAAU,CAC1C,CAAAC,IAAA,EAAiCC,GAAG,KAAK;EAAA,IAAxC;IAAEC,QAAQ;IAAEC,KAAK;IAAE,GAAGC;EAAM,CAAE,GAAAJ,IAAA;EAC7B,MAAMK,GAAG,GAAGC,oBAAoB,EAAE;EAClC,MAAMC,OAAO,GAAGC,YAAY,CAACP,GAAG,EAAEI,GAAG,CAACI,gBAAgB,CAAC;EACvD,sBAAuBC,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACE,GAAGR,MAAM;IACTH,GAAG,EAAEM,OAAO;IACZJ,KAAK,EAAE;MACLU,SAAS,EAAER,GAAG,CAACS,iBAAiB,GAAG,QAAQ,GAAG,QAAQ;MACtDC,SAAS,EAAEV,GAAG,CAACW,iBAAiB,GAAG,QAAQ,GAAG,QAAQ;MACtD,GAAGb;IACJ;EACF,GACe,eAAAO,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAER,KAAK,EAAE;MAAEc,QAAQ,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAS;IAAEjB,GAAG,EAAEI,GAAG,CAACc;EAAe,CAAE,EAAEjB,QAAQ,CACtI,CAAK;AACF,CACH,CAAE;AACFJ,kBAAkB,CAACsB,WAAW,GAAG,kCAAkC"},"metadata":{},"sourceType":"module","externalDependencies":[]}